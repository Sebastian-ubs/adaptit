{\rtf1\ansi\deff3\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f4\froman\fprq2\fcharset128 Times New Roman;}{\f5\froman\fprq2\fcharset0 Arial;}{\f6\froman\fprq2\fcharset0 Courier New;}{\f7\fnil\fprq2\fcharset0 Courier New;}{\f8\fnil\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f9\fnil\fprq2\fcharset0 Times New Roman;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet{\s0\snext0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033 Normal;}
{\s1\sbasedon0\snext1\ql\widctlpar\tx1728\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\sb240\sa60\keepn\ltrpar\cf1\b\kerning1\dbch\af8\langfe1025\dbch\af8\afs24\loch\f5\fs32\lang1033 Heading 1;}
{\s2\sbasedon0\snext2\ql\widctlpar\tx2304\hyphpar0\faauto\li576\ri0\lin576\rin0\fi-576\sb240\sa60\keepn\ltrpar\cf1\i\b\kerning1\dbch\af8\langfe1025\dbch\af8\afs24\loch\f5\fs28\lang1033 Heading 2;}
{\s3\sbasedon0\snext3\ql\widctlpar\tx2880\hyphpar0\faauto\li720\ri0\lin720\rin0\fi-720\sb240\sa60\keepn\ltrpar\cf1\b\kerning1\dbch\af8\langfe1025\dbch\af8\afs24\loch\f5\fs26\lang1033 Heading 3;}
{\*\cs15\snext15 Default Paragraph Font;}
{\*\cs16\sbasedon15\snext16\cf2\ul\ulc0\dbch\af9 Internet Link;}
{\*\cs17\sbasedon15\snext17\cf13\ul\ulc0\dbch\af9\langfe255 FollowedHyperlink;}
{\*\cs18\snext18 Numbering Symbols;}
{\*\cs19\snext19\dbch\af9 ListLabel 1;}
{\*\cs20\snext20\dbch\af9 ListLabel 2;}
{\*\cs21\snext21\b0\dbch\af9 ListLabel 3;}
{\*\cs22\snext22\dbch\af9 ListLabel 4;}
{\*\cs23\snext23\dbch\af9 ListLabel 5;}
{\*\cs24\snext24\dbch\af9 ListLabel 6;}
{\*\cs25\snext25\dbch\af9 ListLabel 7;}
{\*\cs26\snext26\dbch\af9 ListLabel 8;}
{\*\cs27\snext27\dbch\af9 ListLabel 9;}
{\*\cs28\snext28\dbch\af9\loch\f0 ListLabel 10;}
{\*\cs29\snext29\b\dbch\af9\loch\f0\fs16 ListLabel 11;}
{\*\cs30\snext30\dbch\af9 ListLabel 12;}
{\*\cs31\snext31\dbch\af9 ListLabel 13;}
{\*\cs32\snext32\dbch\af9 ListLabel 14;}
{\*\cs33\snext33\dbch\af9 ListLabel 15;}
{\*\cs34\snext34\dbch\af9 ListLabel 16;}
{\*\cs35\snext35\dbch\af9 ListLabel 17;}
{\*\cs36\snext36\dbch\af9 ListLabel 18;}
{\*\cs37\snext37\dbch\af9 ListLabel 19;}
{\*\cs38\snext38\b0\dbch\af9\loch\f0\fs16 ListLabel 20;}
{\*\cs39\snext39\dbch\af9 ListLabel 21;}
{\*\cs40\snext40\b0\dbch\af9 ListLabel 22;}
{\*\cs41\snext41\dbch\af9 ListLabel 23;}
{\*\cs42\snext42\dbch\af9 ListLabel 24;}
{\*\cs43\snext43\dbch\af9 ListLabel 25;}
{\*\cs44\snext44\dbch\af9 ListLabel 26;}
{\*\cs45\snext45\dbch\af9 ListLabel 27;}
{\*\cs46\snext46\dbch\af9 ListLabel 28;}
{\*\cs47\snext47\dbch\af9 ListLabel 29;}
{\*\cs48\snext48\b\dbch\af9\loch\f6\fs16 ListLabel 30;}
{\*\cs49\snext49\dbch\af9 ListLabel 31;}
{\*\cs50\snext50\dbch\af9 ListLabel 32;}
{\*\cs51\snext51\dbch\af9 ListLabel 33;}
{\*\cs52\snext52\dbch\af9 ListLabel 34;}
{\*\cs53\snext53\dbch\af9 ListLabel 35;}
{\*\cs54\snext54\dbch\af9 ListLabel 36;}
{\*\cs55\snext55\dbch\af9 ListLabel 37;}
{\*\cs56\snext56\dbch\af9 ListLabel 38;}
{\*\cs57\snext57\b0\dbch\af9\loch\f6\fs16 ListLabel 39;}
{\*\cs58\snext58\dbch\af9 ListLabel 40;}
{\*\cs59\snext59\b0\dbch\af9 ListLabel 41;}
{\*\cs60\snext60\dbch\af9 ListLabel 42;}
{\*\cs61\snext61\dbch\af9 ListLabel 43;}
{\*\cs62\snext62\dbch\af9 ListLabel 44;}
{\*\cs63\snext63\dbch\af9 ListLabel 45;}
{\*\cs64\snext64\dbch\af9 ListLabel 46;}
{\*\cs65\snext65\dbch\af9 ListLabel 47;}
{\*\cs66\snext66\dbch\af9 ListLabel 48;}
{\*\cs67\snext67\b\dbch\af9\loch\f6\fs16 ListLabel 49;}
{\*\cs68\snext68\dbch\af9 ListLabel 50;}
{\*\cs69\snext69\dbch\af9 ListLabel 51;}
{\*\cs70\snext70\dbch\af9 ListLabel 52;}
{\*\cs71\snext71\dbch\af9 ListLabel 53;}
{\*\cs72\snext72\dbch\af9 ListLabel 54;}
{\*\cs73\snext73\dbch\af9 ListLabel 55;}
{\*\cs74\snext74\dbch\af9 ListLabel 56;}
{\*\cs75\snext75\dbch\af9 ListLabel 57;}
{\s76\sbasedon0\snext77\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af8\langfe1025\dbch\af8\afs24\loch\f5\fs28\lang1033 Heading;}
{\s77\sbasedon0\snext77\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\sb0\sa120\ltrpar\cf1\kerning1\dbch\af8\langfe1025\dbch\af8\afs24\loch\f0\fs24\lang1033 Text Body;}
{\s78\sbasedon77\snext78\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\sb0\sa120\ltrpar\cf1\kerning1\dbch\af8\langfe1025\dbch\af8\afs24\loch\f0\fs24\lang1033 List;}
{\s79\sbasedon0\snext79\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\sb120\sa120\ltrpar\cf1\i\kerning1\dbch\af8\langfe1025\dbch\af8\afs24\loch\f0\fs24\lang1033 Caption;}
{\s80\sbasedon0\snext80\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1025\dbch\af8\afs24\loch\f0\fs24\lang1033 Index;}
{\s81\snext81\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs20\lang3081 DocumentMap;}
{\s82\sbasedon0\snext82\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\sb120\sa120\ltrpar\cf1\i\kerning1\dbch\af8\langfe1025\dbch\af8\afs24\loch\f0\fs24\lang1033 caption;}
}{\*\listtable{\list\listtemplateid1
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'01?;}{\levelnumbers;}\b0\dbch\af9\fi-360\li720}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'01?;}{\levelnumbers;}\dbch\af9\fi-360\li1080}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'01?;}{\levelnumbers;}\b0\dbch\af9\fi-360\li1440}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'01?;}{\levelnumbers;}\dbch\af9\fi-360\li1800}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'01?;}{\levelnumbers;}\dbch\af9\fi-360\li2160}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'01?;}{\levelnumbers;}\dbch\af9\fi-360\li2520}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'01?;}{\levelnumbers;}\dbch\af9\fi-360\li2880}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'01?;}{\levelnumbers;}\dbch\af9\fi-360\li3240}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'01?;}{\levelnumbers;}\dbch\af9\fi-360\li3600}\listid1}
{\list\listtemplateid2
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'00.;}{\levelnumbers\'01;}\dbch\af9\fi-360\li720}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'01.;}{\levelnumbers\'01;}\fi-360\li1080}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'02.;}{\levelnumbers\'01;}\fi-360\li1440}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'03.;}{\levelnumbers\'01;}\fi-360\li1800}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'04.;}{\levelnumbers\'01;}\fi-360\li2160}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'05.;}{\levelnumbers\'01;}\fi-360\li2520}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'06.;}{\levelnumbers\'01;}\fi-360\li2880}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'07.;}{\levelnumbers\'01;}\fi-360\li3240}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'08.;}{\levelnumbers\'01;}\fi-360\li3600}\listid2}
{\list\listtemplateid3
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi-432\li432}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi-576\li576}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi-720\li720}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi-864\li864}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi-1008\li1008}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi-1152\li1152}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi-1296\li1296}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi-1440\li1440}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi-1584\li1584}\listid3}
}{\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}}{\*\generator LibreOffice/5.1.0.3$Windows_x86 LibreOffice_project/5e3e00a007d9b3b6efb6797a8b8e57b51ab1f737}{\info{\title Setting up libcurl and OpenSSL on Windows}{\author Bill Martin}{\creatim\yr2011\mo8\dy14\hr13\min17}{\revtim\yr2016\mo3\dy4\hr16\min2}{\printim\yr0\mo0\dy0\hr0\min0}}\deftab720\deftab720
\hyphauto0\viewscale100
{\*\pgdsctbl
{\pgdsc0\pgdscuse451\pgwsxn12240\pghsxn15840\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\pgdscnxt0 Default Style;}}
\formshade{\*\pgdscno0}\paperh15840\paperw12240\margl1800\margr1800\margt1440\margb1440\sectd\sbknone\sectunlocked1\pgndec\pgwsxn12240\pghsxn15840\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
{\*\ftnsep}\pgndec\pard\plain \s1\ql\widctlpar\tx1728\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\sb240\sa60\keepn\ltrpar\cf1\b\kerning1\dbch\af8\langfe1025\dbch\af8\afs24\loch\f5\fs32\lang1033{\listtext\pard\plain \b0\dbch\af9\loch\f6\fs16 ?\tab}\ilvl0\ls1 \li1152\ri0\lin1152\rin0\fi-360\sb240\sa60{\loch\f6\fs16\rtlch \ltrch\loch
Setup}{\rtlch \ltrch\loch
 Libcurl and OpenSSL on Windows10 underVisStudioCommunity2015}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\qc\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
By Bill Martin (February 2011. Ammended BEW, March 2016)}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
On Linux systems and on Mac OS X, libcurl and the Secure Sockets Layer (SSL) either already exist, or are easily added binary packages \u8211\'96 ready to use. Getting libcurl and SSL set up on a Windows development system is a different story!}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
Visual Studio 2015 communit edition is built from VC14.0; in some places you will use VC14 to refer to the VC version.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
There are }{\b\rtlch \ltrch\loch
four}{\rtlch \ltrch\loch
 things needed on a Windows machine to build libcurl with SSL support:}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \dbch\af9 1.\tab}\ilvl0\ls2 \li1440\ri0\lin1440\rin0\fi-360\ql\widctlpar\tx2880\hyphpar0\faauto\li720\ri0\lin720\rin0\fi-360\ltrpar{\rtlch \ltrch\loch
Downloading and installing ActivePerl}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \dbch\af9 2.\tab}\ilvl0\ls2 \li1440\ri0\lin1440\rin0\fi-360\ql\widctlpar\tx2880\hyphpar0\faauto\li720\ri0\lin720\rin0\fi-360\ltrpar{\rtlch \ltrch\loch
Downloading and set up of Netwide Assembler (nasm)}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \dbch\af9 3.\tab}\ilvl0\ls2 \li1440\ri0\lin1440\rin0\fi-360\ql\widctlpar\tx2880\hyphpar0\faauto\li720\ri0\lin720\rin0\fi-360\ltrpar{\rtlch \ltrch\loch
Downloading and building the OpenSSL library}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \dbch\af9 4.\tab}\ilvl0\ls2 \li1440\ri0\lin1440\rin0\fi-360\ql\widctlpar\tx2880\hyphpar0\faauto\li720\ri0\lin720\rin0\fi-360\ltrpar{\rtlch \ltrch\loch
Downloading and building the Libcurl library}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
The instructions below tell how to download the above 4 libraries/programs to a temporary place on your Windows development machine and how to get the build environments set up to use them with Visual Studio Community edition 2015 on Windows \u8211\'96 in this case, Window 10, but Win 8.x and Win 7 would be identical. Handle them in the order listed above. Install }{\b\rtlch \ltrch\loch
ActivePerl}{\rtlch \ltrch\loch
 and the }{\b\rtlch \ltrch\loch
Netwide Assembler (nasm)}{\rtlch \ltrch\loch
 first before installing and setting up the other libraries. Next install and setup the }{\b\rtlch \ltrch\loch
OpenSSL}{\rtlch \ltrch\loch
 library which is a dependency needed by the Libcurl library. Finally install and setup the }{\b\rtlch \ltrch\loch
Libcurl}{\rtlch \ltrch\loch
 library itself.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
For an unknown reason, the latest LibreOffice 5 Writer app is putting a questionmark before each heading. I\u8217\'92ve not been able to remove it.}
\par \pard\plain \s3\ql\widctlpar\tx2880\hyphpar0\faauto\li720\ri0\lin720\rin0\fi-720\sb240\sa60\keepn\ltrpar\cf1\b\kerning1\dbch\af8\langfe1025\dbch\af8\afs24\loch\f5\fs26\lang1033{\listtext\pard\plain \b0\dbch\af9 ?\tab}\ilvl2\ls1 \li2160\ri0\lin2160\rin0\fi-360\ql\widctlpar\tx2880\hyphpar0\faauto\li720\ri0\lin720\rin0\fi-720\sb240\sa60\keepn\ltrpar{\rtlch \ltrch\loch
ActivePerl}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
Download the latest distribution from: }{{\field{\*\fldinst HYPERLINK "http://www.activestate.com/activeperl/downloads" }{\fldrslt {\cf2\ul\ulc0\dbch\af9\cf2\ul\ulc0\dbch\af9\rtlch \ltrch\loch\loch\f6
http://www.activestate.com/activeperl/downloads}{}}}\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
 }{\rtlch \ltrch\loch
to a temporary directory. Use the download button to get the Windows (x86). The name of the installer will be something like: }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
ActivePerl-5.22.1.2201-MSWin32-x86-64int-299574.msi}{\rtlch \ltrch\loch
. Run the installer accepting the default setup options. Note that the installer should \u8220\'93Add Perl to the PATH environment variable\u8221\'94 during the install. You can check that the installation was successful by invoking a Command window (}{\b\rtlch \ltrch\loch
Start > Run > cmd}{\rtlch \ltrch\loch
) and typing the command: }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
perl \u8211\'96v}{\rtlch \ltrch\loch
  followed by Enter. If the installation and setting of the PATH were successful you should see the program display its name and version number, copyright, etc.}
\par \pard\plain \s3\ql\widctlpar\tx2880\hyphpar0\faauto\li720\ri0\lin720\rin0\fi-720\sb240\sa60\keepn\ltrpar\cf1\b\kerning1\dbch\af8\langfe1025\dbch\af8\afs24\loch\f5\fs26\lang1033{\listtext\pard\plain \b0\dbch\af9 ?\tab}\ilvl2\ls1 \li2160\ri0\lin2160\rin0\fi-360\ql\widctlpar\tx2880\hyphpar0\faauto\li720\ri0\lin720\rin0\fi-720\sb240\sa60\keepn\ltrpar{\rtlch \ltrch\loch
Netwide Assembler (NASM)}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
Download the latest distribution from:}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{{\field{\*\fldinst HYPERLINK "http://www.nasm.us/pub/nasm/releasebuilds/2.09.05/win32/" }{\fldrslt {\cf2\ul\ulc0\dbch\af9\cf2\ul\ulc0\dbch\af9\rtlch \ltrch\loch
http://www.nasm.us/pub/nasm/releasebuilds/2.09.05/win32/}{}}}\rtlch \ltrch\loch
  to a temporary directory. (There has been no version change in the last 5 years or more.) You should download the latest installer which will be named: nasm-2.09.05-installer.exe. Run the nasm-2.09.05-installer.exe to install NASM on your Windows development computer. Accept all the selected components. Insure that the \u8220\'93VS8 integration\u8221\'94 component is selected at the Choose Components page of the installer (BEW: Yes, that\u8217\'92s correct VS8 integration is offered, nothing later, but it doesn\u8217\'92t mattter \u8211\'96 just accept it.) Although the use of NASM is optional we are using it to build support for fast SSL operations in OpenSSL.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
The location of }{\b\rtlch \ltrch\loch
nasm.exe}{\rtlch \ltrch\loch
 needs to be added to the Windows }{\b\rtlch \ltrch\loch
PATH}{\rtlch \ltrch\loch
. Use Windows explorer to find the exact location of the nasm.exe executable file. }
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
On Windows 7 systems (BEW, and Win 10) it seems to go in the user's AppData folder:}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\b\rtlch \ltrch\loch\fs20\loch\f6
c}{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
:\\Users\\<user>\\AppData\\Local\\nasm}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch
On Windows Vista systems, however, it seems to get installed in:}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
c:\\Program Files\\nasm}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
The Windows PATH environment variable will need the actual path to the folder where your nasm.exe is located.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
Go to }{\b\rtlch \ltrch\loch
Start > Control Panel > System > Advanced system settings}{\rtlch \ltrch\loch
 and click on the \u8220\'93}{\b\rtlch \ltrch\loch
Environment Variables}{\rtlch \ltrch\loch
\u8221\'94 button. (In Win 10, Click Settings, in the search box type \u8220\'93environment variables\u8221\'94 - accept the System Environment variables choice, you\u8217\'92ll then see a System dialog and at button right the button \u8220\'93Environment Variables\u8221\'94.) Then add the path separated by a semi-colon to the end of the existing Path values in the \u8220\'93System variables\u8221\'94 part:}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
(Note: If using Windows 7 or later, <user> will be your own user name. Mine is \u8220\'93Bill Martin\u8221\'94 so my addition to the Path values would be \u8220\'93}{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
;C:\\Users\\Bill Martin\\AppData\\Local\\nasm}{\rtlch \ltrch\loch
\u8221\'94 [Note the string begins with a semi-colon to separate it from previous designated paths].  (BEW: the dialog is smarter now, you click an Edit\u8230\'85 option to make changes.)}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
Important: If Visual Studio Com 2015 was running while you augmented the system Path you will need to quit and restart Visual Studio for the Path additions to be recognized (i.e. when invoking the Visual Studio 2015 Command Prompt in the next step during OpenSSL setup). }
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
As with the Perl installation above, you should test that the nasm.exe is on the executable path. Invoke }{\b\rtlch \ltrch\loch
Start > Run > cmd}{\rtlch \ltrch\loch
 to get a command window, and then type:}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\b\rtlch \ltrch\loch\loch\f6
nasm -v}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
You should see it respond with something like \u8220\'93NASM version 2.09.05 compiled on Feb 20 2011\u8221\'94. If you get no response it is either not installed or the augmented path is not correct; or you didn\u8217\'92t restart the computer \u8211\'96 if so, do so and the command should then work after you start up again. Make sure nasm.exe is available from a command window before proceeding to the next step.}
\par \pard\plain \s3\ql\widctlpar\tx2880\hyphpar0\faauto\li720\ri0\lin720\rin0\fi-720\sb240\sa60\keepn\ltrpar\cf1\b\kerning1\dbch\af8\langfe1025\dbch\af8\afs24\loch\f5\fs26\lang1033{\listtext\pard\plain \b0\dbch\af9 ?\tab}\ilvl2\ls1 \li2160\ri0\lin2160\rin0\fi-360\ql\widctlpar\tx2880\hyphpar0\faauto\li720\ri0\lin720\rin0\fi-720\sb240\sa60\keepn\ltrpar{\rtlch \ltrch\loch
The OpenSSL library}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
Security stuff is by nature rather complex, therefore getting OpenSSL built and set up is the most complicated of the steps described here, so follow the steps closely. The OpenSSL people expect you\u8217\'92ll be building DLLs, and it takes extra work to coerce the resource to build a static library.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
Download the latest distribution tarball from: }{{\field{\*\fldinst HYPERLINK "http://www.openssl.org/source/" }{\fldrslt {\cf2\ul\ulc0\dbch\af9\cf2\ul\ulc0\dbch\af9\rtlch \ltrch\loch\loch\f6
http://www.openssl.org/source/}{}}}\rtlch \ltrch\loch
 to a temporary directory. The tarball will be called something like: }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
openssl-1.0.2g.tar.gz}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
Right click on the }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
openssl-1.0.2g.tar.gz}{\rtlch \ltrch\loch
 file and from the Windows Explorer popup menu, select }{\b\rtlch \ltrch\loch
7-zip > Extract Here (}{\rtlch \ltrch\loch
assumes you have 7-zip installed). You will see a file in the same folder called }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
openssl-1.0.2g.tar.}{\rtlch \ltrch\loch
 Right-click on the }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
openssl-1.0.2g.tar}{\rtlch \ltrch\loch
 file and select }{\b\rtlch \ltrch\loch
7-zip > Extract Here}{\rtlch \ltrch\loch
, and you should see a new folder called }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
openssl-1.0.2g}{\rtlch \ltrch\loch
.You can remove the .tar and .tar.gz files. Copy or Move the }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
openssl-1.0.2g}{\rtlch \ltrch\loch
 folder and contents to the }{\b\rtlch \ltrch\loch
c:\\ }{\rtlch \ltrch\loch
root folder}{\b\rtlch \ltrch\loch
 }{\rtlch \ltrch\loch
on your hard drive. The reason for this is that some components in the scripts that will be used don\u8217\'92t handle paths that have spaces within them very well. The }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
openssl-1.0.2g}{\rtlch \ltrch\loch
 folder should now be located at }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
C:\\openssl-1.0.2g}{\rtlch \ltrch\loch
.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
The next step in building OpenSSL requires that }{\b\rtlch \ltrch\loch
ActivePerl}{\rtlch \ltrch\loch
 be already installed (see above). These instructions come mainly from the }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
INSTALL.W32}{\rtlch \ltrch\loch
 file in the }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
openssl-1.0.0d}{\rtlch \ltrch\loch
 folder which Bill read in 2011 to build the early form of this document. The old instructions are still relevant. }
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
Launch a Command Prompt by invoking }{\b\rtlch \ltrch\loch
Start > Run }{\rtlch \ltrch\loch
and typing}{\b\rtlch \ltrch\loch
 cmd}{\rtlch \ltrch\loch
 then Enter. }
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
At the command prompt change to the }{\b\rtlch \ltrch\loch
openssl-1.0.2g}{\rtlch \ltrch\loch
 folder, i.e., }
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
cd C:\\openssl-1.0.2g}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
Then type the following command at the prompt to run }{\b\rtlch \ltrch\loch
Configure}{\rtlch \ltrch\loch
 for the }{\b\rtlch \ltrch\loch
VC-WIN32}{\rtlch \ltrch\loch
 platform:}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\b\dbch\af7\rtlch \ltrch\loch\fs18\loch\f6
perl Configure VC-WIN32 --prefix=C:\\openssl-1.0.2g}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\b\dbch\af7\rtlch \ltrch\loch\fs18\loch\f6

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
The output should have about 43 lines of output and look similar to the following:}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
Configuring for VC-WIN32}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\fs20\loch\f6
    }{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
no-gmp          [default]  OPENSSL_NO_GMP (skip dir)}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\fs20\loch\f6
    }{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
no-jpake        [experimental] OPENSSL_NO_JPAKE (skip dir)}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\fs20\loch\f6
    }{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
no-krb5         [krb5-flavor not specified] OPENSSL_NO_KRB5}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\fs20\loch\f6
    }{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
no-md2          [default]  OPENSSL_NO_MD2 (skip dir)}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\fs20\loch\f6
    }{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
no-rc5          [default]  OPENSSL_NO_RC5 (skip dir)}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\fs20\loch\f6
    }{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
no-rfc3779      [default]  OPENSSL_NO_RFC3779 (skip dir)}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\fs20\loch\f6
    }{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
no-shared       [default]}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\fs20\loch\f6
    }{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
no-store        [experimental] OPENSSL_NO_STORE (skip dir)}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\fs20\loch\f6
    }{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
no-zlib         [default]}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\fs20\loch\f6
    }{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
no-zlib-dynamic [default]}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
IsMK1MF=1}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
CC            =cl}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
CFLAG         =-DOPENSSL_THREADS  -DDSO_WIN32 -W3 -WX -Gs0 -GF -Gy -nologo -DOP}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
NSSL_SYSNAME_WIN32 -DWIN32_LEAN_AND_MEAN -DL_ENDIAN -D_CRT_SECURE_NO_DEPRECATE}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
DOPENSSL_BN_ASM_PART_WORDS -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DSHA1_ASM}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
-DSHA256_ASM -DSHA512_ASM -DMD5_ASM -DRMD160_ASM -DAES_ASM -DWHIRLPOOL_ASM}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
EX_LIBS       =}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
CPUID_OBJ     =x86cpuid.o}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
BN_ASM        =bn-586.o co-586.o x86-mont.o}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
DES_ENC       =des-586.o crypt586.o}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
AES_ENC       =aes-586.o}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
BF_ENC        =bf-586.o}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
CAST_ENC      =cast-586.o}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
RC4_ENC       =rc4-586.o}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
RC5_ENC       =rc5-586.o}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
MD5_OBJ_ASM   =md5-586.o}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
SHA1_OBJ_ASM  =sha1-586.o sha256-586.o sha512-586.o}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
RMD160_OBJ_ASM=rmd-586.o}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
CMLL_ENC=     =cmll-x86.o}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
PROCESSOR     =}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
RANLIB        =true}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
ARFLAGS       =}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
PERL          =perl}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
THIRTY_TWO_BIT mode}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
BN_LLONG mode}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
RC4_INDEX mode}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
RC4_CHUNK is undefined}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
Configured for VC-WIN32.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
Next, type the following command at the prompt to build the Makefiles and the assembly language files:}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
ms\\do_nasm}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
(Note: There is an underscore between do and nasm. There are no spaces.)}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
You should see 6 lines of output and no errors. Output should look similar to this:}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
c:\\openssl-1.0.2g>perl util\\mkfiles.pl  1>MINFO}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
c:\\openssl-1.0.2g>perl util\\mk1mf.pl nasm VC-WIN32  1>ms\\nt.mak}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
c:\\openssl-1.0.2g>perl util\\mk1mf.pl dll nasm VC-WIN32  1>ms\\ntdll.mak}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
c:\\openssl-1.0.2g>perl util\\mk1mf.pl nasm BC-NT  1>ms\\bcb.mak}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
c:\\openssl-1.0.2g>perl util\\mkdef.pl 32 libeay  1>ms\\libeay32.def}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
c:\\openssl-1.0.2g>perl util\\mkdef.pl 32 ssleay  1>ms\\ssleay32.def}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
Next, quit Visual Studio Com 2015 (if it was currently running) and start it up afresh.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
Select the }{\b\rtlch \ltrch\loch
Tools}{\rtlch \ltrch\loch
 menu and \u8220\'93}{\b\rtlch \ltrch\loch
Visual Studio 2015 Command Prompt}{\rtlch \ltrch\loch
\u8221\'94. A new Command Prompt window will open. We use Visual Studio\u8217\'92s command prompt which knows how to find its nmake command line application. In this new VSCom2015 command prompt, change to the openssl folder in the root of the hard drive by typing:}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\b\dbch\af7\rtlch \ltrch\loch\fs18\loch\f6
cd C:\\openssl-1.0.2g}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\b\dbch\af7\rtlch \ltrch\loch\fs18\loch\f6

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
Then type the following at the Visual Studio Com Edition 2015 Command Prompt:}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\b\dbch\af7\rtlch \ltrch\loch\fs18\loch\f6

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\b\dbch\af7\rtlch \ltrch\loch\fs18\loch\f6
nmake \u8211\'96f ms\\ntdll.mak}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
The above command will generate a lot of output for several minutes as it compiles and builds the OpenSSL dynamic linked library. (BEW: I don\u8217\'92t know why Bill wanted this library built, but I\u8217\'92m not game to remove this step. It\u8217\'92s probably so that certain dlls that OpenSSL uses are created.) About five lines from the end of output you should see a \u8220\'93link \u8230\'85\u8221\'94 command, and three lines from the end of output, you should see, a \u8220\'93Creating library \u8230\'85\u8221\'94 command.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
Now, to install OpenSSL to the specified location repeat the same command above adding a space and the word }{\b\rtlch \ltrch\loch
install}{\rtlch \ltrch\loch
 at the end of the command (Note: you should be able to recall the last command by pressing the }{\b\rtlch \ltrch\loch
Up Arrow}{\rtlch \ltrch\loch
, add a space and add the word }{\b\rtlch \ltrch\loch
install}{\rtlch \ltrch\loch
 then press }{\b\rtlch \ltrch\loch
Enter}{\rtlch \ltrch\loch
 to execute the command):}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
nmake \u8211\'96f ms\\ntdll.mak install}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
The output from this command starts with \u8220\'93Building OpenSSL\u8221\'94; it creates the }{\b\rtlch \ltrch\loch
bin}{\rtlch \ltrch\loch
 and }{\b\rtlch \ltrch\loch
lib}{\rtlch \ltrch\loch
 directories as children of the openssl-1.0.2g folder and copies about 80 items to those directories; creates a }{\b\rtlch \ltrch\loch
lib\\engines}{\rtlch \ltrch\loch
 folder and copies another dozen or so dlls to those directories.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
You should test the build by giving this command in the command window:}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\b\dbch\af7\rtlch \ltrch\loch\fs18\loch\f6
nmake \u8211\'96f ms\\ntdll.mak test}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
The test program generates a lot of output and exercises the various OpenSSL features (it doesn\u8217\'92t require any input from you at this point). You should see \u8220\'93}{\b\rtlch \ltrch\loch
passed all tests}{\rtlch \ltrch\loch
\u8221\'94 at the end of the output.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
You have built the }{\b\rtlch \ltrch\loch
dll}{\rtlch \ltrch\loch
 form of the OpenSSL library. You should also now build the }{\b\rtlch \ltrch\loch
static}{\rtlch \ltrch\loch
 library. This involves repeating the nmake commands above but calling a different Makefile (nt.mak). Here are the steps to create the static library:}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\b\dbch\af7\rtlch \ltrch\loch\fs18\loch\f6
nmake \u8211\'96f ms\\nt.mak}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\b\dbch\af7\rtlch \ltrch\loch\fs18\loch\f6
nmake \u8211\'96f ms\\nt.mak install}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\b\dbch\af7\rtlch \ltrch\loch\fs18\loch\f6
nmake \u8211\'96f ms\\nt.mak test}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
The outputs for the static library should look similar to the previous outputs you saw when creating the dll library.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
[Note: we could also build a debug version of OpenSSL as described in INSTALL.W32 but I don\u8217\'92t anticipate that we would need to do any debugging of the OpenSSL library itself during Adapt It development. }{\b\rtlch \ltrch\loch
But if you want to avoid a Link error in Debug builds repeat the Configure step above but with a small change}{\rtlch \ltrch\loch
, i.e.,: }
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\b\dbch\af7\rtlch \ltrch\loch\fs18\loch\f6
perl Configure }{\b\dbch\af7\highlight7\rtlch \ltrch\loch\fs18\loch\f6
debug-}{\b\dbch\af7\rtlch \ltrch\loch\fs18\loch\f6
VC-WIN32 --prefix=C:\\openssl-1.0.0d}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\b\dbch\af7\rtlch \ltrch\loch\fs18\loch\f6

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
Note: The only difference is the }{\b\rtlch \ltrch\loch
debug-VC-WIN32}{\rtlch \ltrch\loch
 part of the perl command has \u8220\'93}{\b\rtlch \ltrch\loch
debug-}{\rtlch \ltrch\loch
\u8220\'93 prefixed to VC-WIN32. No further changes are needed within Visual Studio\u8217\'92s Debug build of Adapt It to use the debug version.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
We do not build a 64-bit specific version of Adapt It for Windows. The 32-bit version should work on 64-bit Windows systems, therefore I believe that there is no necessity of building a 64-bit specific version of the OpenSSL library.}
\par \pard\plain \s2\ql\widctlpar\tx2304\hyphpar0\faauto\li576\ri0\lin576\rin0\fi-576\sb240\sa60\keepn\ltrpar\cf1\i\b\kerning1\dbch\af8\langfe1025\dbch\af8\afs24\loch\f5\fs28\lang1033{\listtext\pard\plain \b0\dbch\af9 ?\tab}\ilvl2\ls1 \li3456\ri0\lin3456\rin0\fi-360\ql\widctlpar\tx3744\hyphpar0\faauto\li2016\ri0\lin2016\rin0\fi-360\sb240\sa60\keepn\ltrpar{\rtlch \ltrch\loch
Setup OPENSSL, LIBCURL and CURL_LIB  Environment Variables}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
Add an }{\b\rtlch \ltrch\loch
OPENSSL}{\rtlch \ltrch\loch
 environment variable to the Control Panel's System Properties (Advanced Tab > Environment Variables). Assign the path to the openssl-1.0.}{\rtlch \ltrch\loch
2g}{\rtlch \ltrch\loch
 folder (}{\b\rtlch \ltrch\loch
c:\\openssl-1.0.}{\b\rtlch \ltrch\loch
2g}{\rtlch \ltrch\loch
) as the value for OPENSSL. While you are setting environment variables, go ahead and add }{\rtlch \ltrch\loch
two more.}{\rtlch \ltrch\loch
 }{\rtlch \ltrch\loch
O}{\rtlch \ltrch\loch
ne called }{\b\rtlch \ltrch\loch
LIBCURL}{\rtlch \ltrch\loch
, and assign it the path }{\b\rtlch \ltrch\loch
c:\\curl-7.}{\b\rtlch \ltrch\loch
47}{\b\rtlch \ltrch\loch
.}{\b\rtlch \ltrch\loch
1}{\rtlch \ltrch\loch
. }{\rtlch \ltrch\loch
The other, }{\b\ab\rtlch \ltrch\loch
CURL_LIB}{\rtlch \ltrch\loch
 and assign it the path: }{\b\ab\rtlch \ltrch\loch
c:\\curl-7.47.1\\build}{\rtlch \ltrch\loch
. }{\rtlch \ltrch\loch
Click OK twice to close the System Properties dialogs. Remember that Visual Studio will only recognize environment variables that are set before it is invoked. }
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
(BEW: the cURL downloaded resources have altered their file structures. Our definition of LIBCURL will be used for VSCom2105 handling #include <curl/curl.h>; but the Linker will no longer find the libcurl.lib file at the same place, it is now under the build directory. Also, the Debug build of curl now uses the filename libcurld.lib.)}
\par \pard\plain \s3\ql\widctlpar\tx2880\hyphpar0\faauto\li720\ri0\lin720\rin0\fi-720\sb240\sa60\keepn\ltrpar\cf1\b\kerning1\dbch\af8\langfe1025\dbch\af8\afs24\loch\f5\fs26\lang1033{\listtext\pard\plain \b0\dbch\af9 ?\tab}\ilvl2\ls1 \li2160\ri0\lin2160\rin0\fi-360\ql\widctlpar\tx2880\hyphpar0\faauto\li720\ri0\lin720\rin0\fi-720\sb240\sa60\keepn\ltrpar{\rtlch \ltrch\loch
The libcurl library}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
Download the latest distribution from: }{{\field{\*\fldinst HYPERLINK "http://curl.haxx.se/download.html" }{\fldrslt {\cf2\ul\ulc0\dbch\af9\cf2\ul\ulc0\dbch\af9\rtlch \ltrch\loch\loch\f6
http://curl.haxx.se/download.html}{}}}\rtlch \ltrch\loch
 to a temporary directory. You can download it in zip format which will be called something like: }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
curl-7.}{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
47}{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
.}{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
1}{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
.zip}{\rtlch \ltrch\loch
. Right-click on the }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
curl-7.}{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
47.1}{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
.zip}{\rtlch \ltrch\loch
 file and select }{\b\rtlch \ltrch\loch
7-zip > Extract Here}{\rtlch \ltrch\loch
. You should now see a new folder called }{\b\rtlch \ltrch\loch
curl-7.}{\b\rtlch \ltrch\loch
47.1}{\rtlch \ltrch\loch
. You can remove the zip file. Note: If the version of curl you have downloaded is different from that described above, you will need to adjust the LIBCURL environment variable's value that you set in the previous section.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
(BEW, this next bit I\u8217\'92ve not changed.) }{\rtlch \ltrch\loch
These instructions come partly from the \u8220\'93MSVC from command line\u8221\'94 section of the INSTALL file in the docs folder of the curl-7.21.4 folder, and partly from the following sources on the Internet (Note: a through d below are not necessary reading unless you are interested):}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li720\ri0\lin720\rin0\fi0\ltrpar{\rtlch \ltrch\loch
a. Tutorial about building and using libcurl in Visual Studio:}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li720\ri0\lin720\rin0\fi0\ltrpar{\rtlch \ltrch
    }{\rtlch \ltrch\loch
http://curl.haxx.se/libcurl/c/visual_studio.pdf}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li720\ri0\lin720\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li720\ri0\lin720\rin0\fi0\ltrpar{\rtlch \ltrch\loch
b. Some other information related to getting libcurl to build on Windows with SSL support:}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li720\ri0\lin720\rin0\fi0\ltrpar{\rtlch \ltrch
    }{\rtlch \ltrch\loch
http://stackoverflow.com/questions/197444/building-libcurl-with-ssl-support-on-windows}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li720\ri0\lin720\rin0\fi0\ltrpar{\rtlch \ltrch
    }{\rtlch \ltrch\loch
http://stackoverflow.com/questions/2884505/building-curl-libcurl-with-visual-studio-2010}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li720\ri0\lin720\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li720\ri0\lin720\rin0\fi0\ltrpar{\rtlch \ltrch\loch
c. Building libcurl with SSH support. The SSH support is not relevant but he also goes into detail about building openssl:}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li720\ri0\lin720\rin0\fi0\ltrpar{\rtlch \ltrch
    }{\rtlch \ltrch\loch
http://curl.haxx.se/libcurl/c/Using-libcurl-with-SSH-support-in-Visual-Studio-2008.pdf}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li720\ri0\lin720\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li720\ri0\lin720\rin0\fi0\ltrpar{\rtlch \ltrch\loch
d. Email discussion about issues that might happen when building libcurl with SSL on Windows:}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li720\ri0\lin720\rin0\fi0\ltrpar{\rtlch \ltrch
    }{\rtlch \ltrch\loch
http://curl.haxx.se/mail/lib-2005-10/0156.html}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
It is possible to again use the Visual Studio }{\rtlch \ltrch\loch
Com }{\rtlch \ltrch\loch
20}{\rtlch \ltrch\loch
15}{\rtlch \ltrch\loch
 Command Prompt to build the libcurl libraries, but I found that it worked better for me to build libcurl from within the Visual Studio }{\rtlch \ltrch\loch
Community 2015}{\rtlch \ltrch\loch
\u8217\'92s IDE starting with a Visual Studio 6 project file supplied with the libcurl library. Here are the steps I used:}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\rtlch \ltrch\loch
1. After downloading the curl-7.}{\rtlch \ltrch\loch
47.1}{\rtlch \ltrch\loch
.zip file, unzip it with 7zip, and copy or move the }{\b\rtlch \ltrch\loch
curl-7.}{\b\rtlch \ltrch\loch
47.1}{\rtlch \ltrch\loch
 folder to the root of the hard drive c: so it resides at }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
c:\\curl-7.}{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
47}{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
.}{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
1}{\rtlch \ltrch\loch
. The curl-7.}{\rtlch \ltrch\loch
47.1}{\rtlch \ltrch\loch
 folder will now be a sister folder of the openssl-1.0.}{\rtlch \ltrch\loch
2g}{\rtlch \ltrch\loch
 folder (created in the previous section), both folders residing off the root of the hard drive.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\rtlch \ltrch\loch
2. Start Visual Studio }{\rtlch \ltrch\loch
Com }{\rtlch \ltrch\loch
20}{\rtlch \ltrch\loch
15}{\rtlch \ltrch\loch
 and select }{\b\rtlch \ltrch\loch
File > Open > Project/Solution...}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\rtlch \ltrch\loch
3. }{\rtlch \ltrch\loch
There is probably more than one way to do this. Here is what I did. The }{\b\ab\rtlch \ltrch\loch
projects}{\rtlch \ltrch\loch
 folder is where you find project files for Visual Studio, up to VS2014. }{\rtlch \ltrch\loch
Navigate to the }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
c:\\curl-7.}{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
47.1\\projects\\Windows}{\rtlch \ltrch\loch
 folder. }{\rtlch \ltrch\loch
Enter the }{\b\ab\rtlch \ltrch\loch
VS14}{\rtlch \ltrch\loch
 folder, and then enter the }{\b\ab\rtlch \ltrch\loch
lib}{\rtlch \ltrch\loch
 folder}{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
. D}{\rtlch \ltrch\loch
oubleclick the }{\b\ab\rtlch \ltrch\loch
libcurl.vcxproj}{\rtlch \ltrch\loch
 f}{\rtlch \ltrch\loch
ile. Allow it to upgrade the project to a VS }{\rtlch \ltrch\loch
Community 2015 }{\rtlch \ltrch\loch
project.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\rtlch \ltrch\loch
4. Right-click on the }{\b\rtlch \ltrch\loch
libcurl}{\rtlch \ltrch\loch
 project in the solution explorer and select "}{\b\rtlch \ltrch\loch
Properties}{\rtlch \ltrch\loch
".}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\rtlch \ltrch\loch
5. Select }{\b\rtlch \ltrch\loch
LIB De}{\b\rtlch \ltrch\loch
bug \u8211\'96 }{\b\rtlch \ltrch\loch
LIB OpenSSL}{\rtlch \ltrch\loch
 from the Configuration drop down list. }{\rtlch \ltrch\loch
(There are }{\b0\ab0\rtlch \ltrch\loch
many options, be careful to choose the above. DO NOT choose any with SSH2)}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\rtlch \ltrch\loch
6. Select }{\b\rtlch \ltrch\loch
C/C++ > General}{\rtlch \ltrch\loch
. Click in the }{\b\rtlch \ltrch\loch
Additional Include Directories}{\rtlch \ltrch\loch
 edit box and click the}{\b0\ab0\rtlch \ltrch\loch
 }{\b0\ab0\rtlch \ltrch\loch
button at the end of the line,  open the line for editing. }{\b0\ab0\rtlch \ltrch\loch
(Click Edit...)}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\rtlch \ltrch\loch
7. Add this directory search path: }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
$(OPENSSL)\\include}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\rtlch \ltrch\loch
8. Select }{\b\rtlch \ltrch\loch
C/C++ > Preprocessor}{\rtlch \ltrch\loch
. Click in the }{\b\rtlch \ltrch\loch
Preprocessor Definitions}{\rtlch \ltrch\loch
 edit box and click the button at right }{\rtlch \ltrch\loch
to open the line for editing}{\rtlch \ltrch\loch
.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\rtlch \ltrch\loch
9. }{\rtlch \ltrch\loch
Verify that}{\rtlch \ltrch\loch
 }{\b\rtlch \ltrch\loch
CURL_STATICLIB }{\b0\ab0\rtlch \ltrch\loch
is already present. If not, add it on a separate line.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\rtlch \ltrch\loch
10. Also }{\b\rtlch \ltrch\loch
add}{\rtlch \ltrch\loch
 these preprocessor definitions on separate lines, }{\rtlch \ltrch\loch
if one or both are absent}{\rtlch \ltrch\loch
: }{\b\rtlch \ltrch\loch
USE_SSLEAY}{\rtlch \ltrch\loch
 and }{\b\rtlch \ltrch\loch
USE_OPENSSL }
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\rtlch \ltrch\loch
11. Select }{\b\rtlch \ltrch\loch
C/C++ > Code Generation}{\rtlch \ltrch\loch
 and change the }{\b\rtlch \ltrch\loch
Runtime Library}{\rtlch \ltrch\loch
 to "}{\b\rtlch \ltrch\loch
Multi-threaded Debug (/MTd)}{\rtlch \ltrch\loch
"}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\rtlch \ltrch\loch
12. Click "}{\b\rtlch \ltrch\loch
Apply}{\rtlch \ltrch\loch
" at bottom of the dialog.\line }
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\rtlch \ltrch\loch
13. Select the }{\b\rtlch \ltrch\loch
LIB R}{\b\rtlch \ltrch\loch
elease \u8211\'96 }{\b\rtlch \ltrch\loch
LIB OpenSSL}{\rtlch \ltrch\loch
 from the Configuration drop down list.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\rtlch \ltrch\loch
14. Select }{\b\rtlch \ltrch\loch
C/C++ > General}{\rtlch \ltrch\loch
. Click in the }{\b\rtlch \ltrch\loch
Additional Include Directories}{\rtlch \ltrch\loch
 edit box and click the button at right }{\rtlch \ltrch\loch
to open the line for editing}{\rtlch \ltrch\loch
.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\rtlch \ltrch\loch
15. Add this directory search path: }{\b\rtlch \ltrch\loch
$(OPENSSL)\\include}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\rtlch \ltrch\loch
16. Select }{\b\rtlch \ltrch\loch
C/C++ > Preprocessor}{\rtlch \ltrch\loch
. Click in the }{\b\rtlch \ltrch\loch
Preprocessor Definitions}{\rtlch \ltrch\loch
 edit box and click the button at right }{\rtlch \ltrch\loch
to open the line for editing.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\rtlch \ltrch\loch
17. }{\rtlch \ltrch\loch
Verify that }{\rtlch \ltrch\loch
 }{\b\rtlch \ltrch\loch
CURL_STATICLIB }{\b0\ab0\rtlch \ltrch\loch
is present. If not, add it on a separate line.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\rtlch \ltrch\loch
18. Also }{\b\rtlch \ltrch\loch
add}{\rtlch \ltrch\loch
 these preprocessor definitions on separate lines, }{\rtlch \ltrch\loch
if one or both are absent}{\rtlch \ltrch\loch
: }{\b\rtlch \ltrch\loch
USE_SSLEAY}{\rtlch \ltrch\loch
 and }{\b\rtlch \ltrch\loch
USE_OPENSSL}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\rtlch \ltrch\loch
19. Select }{\b\rtlch \ltrch\loch
C/C++ > Code Generation}{\rtlch \ltrch\loch
 and change the }{\b\rtlch \ltrch\loch
Runtime Library}{\rtlch \ltrch\loch
 to "}{\b\rtlch \ltrch\loch
Multi-threaded (/MT)"}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\rtlch \ltrch\loch
20. Click "}{\b\rtlch \ltrch\loch
Apply}{\rtlch \ltrch\loch
" at bottom of the dialog and }{\b\ab\rtlch \ltrch\loch
OK}{\rtlch \ltrch\loch
.\line }
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\rtlch \ltrch\loch
21. Select }{\b\rtlch \ltrch\loch
LIB De}{\b\rtlch \ltrch\loch
bug \u8211\'96 }{\b\rtlch \ltrch\loch
LIB OpenSSL}{\rtlch \ltrch\loch
 from the Configuration drop down list.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\rtlch \ltrch\loch
22. Select }{\b\rtlch \ltrch\loch
Build Solution}{\rtlch \ltrch\loch
 from the }{\b\rtlch \ltrch\loch
Build}{\rtlch \ltrch\loch
 menu. The build should succeed without errors or warnings. There should be a new folder called }{\b\rtlch \ltrch\loch
LIB De}{\b\rtlch \ltrch\loch
bug \u8211\'96 }{\b\rtlch \ltrch\loch
LIB OpenSSL}{\rtlch \ltrch\loch
 }{\rtlch \ltrch\loch
created. Its path is: }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
c:\\curl-7.}{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
47.1}{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
\\}{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
build\\Win32\\VC14\\ }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
LIB De}{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
bug \u8211\'96 }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
LIB OpenSSL}{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
 }{\rtlch \ltrch\loch
 that contains a library file called }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
libcurl}{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
d}{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
.lib}{\rtlch \ltrch\loch
 (about 2.}{\rtlch \ltrch\loch
26}{\rtlch \ltrch\loch
MB in size). If you get errors it probably means that the OPENSSL environment variable was not set correctly in the section above, or Visual Studio was started before the environment variable was set.\line }
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\rtlch \ltrch\loch
23. Select }{\b\rtlch \ltrch\loch
LIB }{\b\rtlch \ltrch\loch
Release}{\b\rtlch \ltrch\loch
 \u8211\'96 }{\b\rtlch \ltrch\loch
LIB OpenSSL}{\rtlch \ltrch\loch
 from the Configuration drop down list.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\rtlch \ltrch\loch
24. Select }{\b\rtlch \ltrch\loch
Build Solution}{\rtlch \ltrch\loch
 from the }{\b\rtlch \ltrch\loch
Build}{\rtlch \ltrch\loch
 menu. The build should succeed without errors or warnings. There should be a new folder called Release at }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
c:\\curl-7.21.4\\Release}{\rtlch \ltrch\loch
 that contains a library file called }{\b\rtlch \ltrch\loch
LIB }{\b\rtlch \ltrch\loch
Release}{\b\rtlch \ltrch\loch
 \u8211\'96 }{\b\rtlch \ltrch\loch
LIB OpenSSL}{\rtlch \ltrch\loch
 }{\rtlch \ltrch\loch
created. Its path is: }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
c:\\curl-7.47.1\\build\\Win32\\VC14\\ }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
LIB }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
Release \u8211\'96 }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
LIB OpenSSL  }{\b0\dbch\af7\afs24\ab0\rtlch \ltrch\loch\fs24\loch\f4
that contains a library file called }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
libcurl.lib}{\rtlch \ltrch\loch
 (about 2.}{\rtlch \ltrch\loch
8}{\rtlch \ltrch\loch
1MB in size). Again, if you get errors it probably means that the OPENSSL environment variable was not set correctly in the section above, or Visual Studio was started before the environment variable was set.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar\b\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\b\rtlch \ltrch\loch
NOTE: Steps 25 through 34 below have ALREADY been done}{\rtlch \ltrch\loch
 }{\b\rtlch \ltrch\loch
in the Visual Studio 2008 project, so when you get the Visual Studio project file from svn steps 25 through 34 will already have been done for you. I list them here so you can see what has been done to the Visual Studio\u8217\'92s Adapt_It project properties. Skip to step 35 below, where you will see the last step in the process that has already been done.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\i\rtlch \ltrch\loch
25. Open the Adapt_It  project in Visual Studio }{\i\rtlch \ltrch\loch
Community 2015}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\i\rtlch \ltrch\loch
26. Right click on the }{\i\b\rtlch \ltrch\loch
Adapt_It}{\i\rtlch \ltrch\loch
 project in the solution explorer and select "}{\i\b\rtlch \ltrch\loch
Properties}{\i\rtlch \ltrch\loch
".}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\i\rtlch \ltrch\loch
27. Select }{\i\b\rtlch \ltrch\loch
Unicode Debug}{\i\rtlch \ltrch\loch
 from the Configuration drop down list.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\i\rtlch \ltrch\loch
28. Add the following lib files, }{\i\rtlch \ltrch\loch
if not present,}{\i\rtlch \ltrch\loch
 to }{\i\b\rtlch \ltrch\loch
Linker > Input > Additional Dependencies}{\i\rtlch \ltrch\loch
: }{\i\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
wldap32.lib libcurl.lib libeay32.lib ssleay32.lib}{\i\rtlch \ltrch\loch
. Change }{\i\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
wsock32.lib}{\i\rtlch \ltrch\loch
 dependency to use }{\i\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
ws2_32.lib}{\i\rtlch \ltrch\loch
 instead, }{\i\rtlch \ltrch\loch
if that change is not already done}{\i\rtlch \ltrch\loch
. }{\i\rtlch \ltrch\loch
Change libcurl.lib to be libcurld.lib}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\i\rtlch \ltrch\loch
2}{\i\rtlch \ltrch\loch
9. Add to }{\i\b\ab\rtlch \ltrch\loch
Linker >General > Additional Library Directories}{\i\rtlch \ltrch\loch
:\line }{\i\b\ab\rtlch \ltrch\loch
$(CURL_LIB)\\Win32\\VC14\\LIB Debug - LIB OpenSSL}{\i\rtlch \ltrch\loch
\line and click OK to accept the addition.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\i\rtlch \ltrch\loch
30}{\i\rtlch \ltrch\loch
. Click "}{\i\b\rtlch \ltrch\loch
Apply}{\i\rtlch \ltrch\loch
" at the bottom of the dialog.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\i\rtlch \ltrch\loch
3}{\i\rtlch \ltrch\loch
1}{\i\rtlch \ltrch\loch
. Select }{\i\b\rtlch \ltrch\loch
Build Solution}{\i\rtlch \ltrch\loch
 from the }{\i\b\rtlch \ltrch\loch
Build}{\i\rtlch \ltrch\loch
 menu.\line }
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\i\rtlch \ltrch\loch
3}{\i\rtlch \ltrch\loch
2}{\i\rtlch \ltrch\loch
. Select }{\i\b\rtlch \ltrch\loch
Unicode Release}{\i\rtlch \ltrch\loch
 from the Configuration drop down list.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\i\rtlch \ltrch\loch
3}{\i\rtlch \ltrch\loch
3}{\i\rtlch \ltrch\loch
. Add the following lib files, }{\i\rtlch \ltrch\loch
if not present,}{\i\rtlch \ltrch\loch
 }{\i\b\rtlch \ltrch\loch
to Linker > Input > Additional Dependencies}{\i\rtlch \ltrch\loch
: }{\i\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
wldap32.lib libcurl.lib libeay32.lib ssleay32.lib}{\i\rtlch \ltrch\loch
. Change }{\i\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
wsock32.lib}{\i\rtlch \ltrch\loch
 dependency to use }{\i\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
ws2_32.lib}{\i\rtlch \ltrch\loch
 instead, }{\i\rtlch \ltrch\loch
if not already changed}{\i\rtlch \ltrch\loch
. }{\i\rtlch \ltrch\loch
Click OK to close the list. }{\i\rtlch \ltrch\loch
The libcurl.lib library file should already be present.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\i\rtlch \ltrch\loch
3}{\i\rtlch \ltrch\loch
4}{\i\rtlch \ltrch\loch
. Add to }{\i\b\ab\rtlch \ltrch\loch
Linker >General > Additional Library Directories}{\i\rtlch \ltrch\loch
:\line }{\i\b\ab\rtlch \ltrch\loch
$(CURL_LIB)\\Win32\\VC14\\LIB Release - LIB OpenSSL}{\i\rtlch \ltrch\loch
\line and click OK to accept the addition.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\i\rtlch \ltrch\loch
3}{\i\rtlch \ltrch\loch
5}{\i\rtlch \ltrch\loch
. Click "}{\i\b\rtlch \ltrch\loch
Apply}{\i\rtlch \ltrch\loch
" at the bottom of the dialog.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\i\rtlch \ltrch\loch
3}{\i\rtlch \ltrch\loch
6}{\i\rtlch \ltrch\loch
. Select }{\i\b\rtlch \ltrch\loch
Build Solution}{\i\rtlch \ltrch\loch
 from the }{\i\b\rtlch \ltrch\loch
Build}{\i\rtlch \ltrch\loch
 menu. Note: According to the INSTALL doc when building an application such as Adapt It that uses the }{\i\b\rtlch \ltrch\loch
static}{\i\rtlch \ltrch\loch
 libcurl library, we must add the }{\i\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
CURL_STATICLIB}{\i\rtlch \ltrch\loch
 symbol to Preprocessor Defines in Visual Studio so that}{\rtlch \ltrch\loch
\line \line }{\i\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
/D CURL_STATICLIB}{\rtlch \ltrch\loch
\line \line }{\i\rtlch \ltrch\loch
is included in the command line arguments that get invoked by the IDE. }{\i\b\rtlch \ltrch\loch
I have already added this define in the Visual Studio }{\i\b\rtlch \ltrch\loch
Community 2015 }{\i\b\rtlch \ltrch\loch
project, so when you get the project file from svn it should be included in the Preprocessor Defines}{\i\rtlch \ltrch\loch
. Without this define the linker will look for dynamic import symbols instead of the static ones.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\b\rtlch \ltrch\loch
NOTE: }{\b\rtlch \ltrch\loch
The next step}{\b\rtlch \ltrch\loch
 has already been done and the Certificate of Authority file (curl-ca-bundle.crt) created in this step is now located in the docs folder of the repository, and gets included in the Adapt It installers. }{\b\rtlch \ltrch\loch
The step}{\b\rtlch \ltrch\loch
 is provided here in case you would ever need to recreate the file.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\tx2016\hyphpar0\faauto\li432\ri0\lin432\rin0\fi-432\ltrpar{\rtlch \ltrch\loch
The last thing that is required for the libcurl library to incorporate SSL operations is to create a file containing certificates of authority (CA). This file is called }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
ca-bundle.crt}{\rtlch \ltrch\loch
 and is in a format the curl knows about (called a PEM format). This }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
ca-bundle.crt}{\rtlch \ltrch\loch
 file can be created by invoking a perl script which is located in the }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
c:\\curl-7.21.1\\lib}{\rtlch \ltrch\loch
 folder from the command line. Note: The script downloads a current list of authorities from the Mozilla project over the Internet. \line }{\b\rtlch \ltrch\loch
a.}{\rtlch \ltrch\loch
 Open a command prompt (}{\b\rtlch \ltrch\loch
Start > Run > cmd}{\rtlch \ltrch\loch
).\line }{\b\rtlch \ltrch\loch
b.}{\rtlch \ltrch\loch
 Change to the c:\\curl-7.21.4\\lib directory (}{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
cd c:\\curl-7.21.4\\lib}{\rtlch \ltrch\loch
)\line }{\b\rtlch \ltrch\loch
c.}{\rtlch \ltrch\loch
 invoke the perl command by typing: }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
mk-ca-bundle.pl}{\rtlch \ltrch\loch
\line You should see the following output lines:\line }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
   Downloading \u8216\'91certdata.txt\u8217\'92 \u8230\'85}{\rtlch \ltrch\loch
\line }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
   Processing \u8216\'91certdata.txt\u8217\'92 \u8230\'85}{\rtlch \ltrch\loch
\line }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
   Done (140 CA certs processed)}{\rtlch \ltrch\loch
\line When finished, you should see a new file in the directory called }{\b\dbch\af7\rtlch \ltrch\loch\fs20\loch\f6
ca-bundle.crt}{\rtlch \ltrch\loch
. This file now contains a long list of authorities and their certificate keys. For Adapt It, we really only need to have the particular certificate(s) of authority for }{\b\rtlch \ltrch\loch
StartCom Ltd}{\rtlch \ltrch\loch
, which issues the SSL Certificate of Authority for }{\b\rtlch \ltrch\loch
adapt-it.org}{\rtlch \ltrch\loch
. So, I\u8217\'92ve created a separate file called }{\b\rtlch \ltrch\loch
curl-ca-bundle.crt}{\rtlch \ltrch\loch
 which contains the certificates that Adapt It needs. This file is now part of our repository and resides in the repository\u8217\'92s }{\b\rtlch \ltrch\loch
docs}{\rtlch \ltrch\loch
 folder. It is copied from there and included in our installers and packagers which place it in the correct location (at the path stored in }{\dbch\af7\rtlch \ltrch\loch\fs16\lang3081\loch\f6
m_setupFolder}{\rtlch \ltrch\loch
) so that the Adapt It executables can find it.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar\cf1\kerning1\dbch\af8\langfe1081\dbch\af8\afs24\alang1081\loch\f0\fs24\lang1033\ql\widctlpar\hyphpar0\faauto\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\loch
If everything is done correctly, the Adapt It project on Windows should now build with the libcurl and OpenSSL support needed for the CEmailReportDlg class; }{\rtlch \ltrch\loch
and also for the Kbserver functionality, including service discovery based on Zeroconf sources.}
\par }