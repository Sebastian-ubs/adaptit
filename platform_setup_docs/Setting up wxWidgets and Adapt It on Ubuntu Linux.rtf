{\rtf1\ansi\deff4\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f4\froman\fprq0\fcharset128 Times New Roman;}{\f5\froman\fprq0\fcharset128 Arial-BoldMT;}{\f6\froman\fprq0\fcharset128 Liberation Sans{\*\falt Arial};}{\f7\froman\fprq0\fcharset128 Liberation Serif{\*\falt Times New Roman};}{\f8\fswiss\fprq0\fcharset128 Liberation Sans{\*\falt Arial};}{\f9\froman\fprq0\fcharset128 OpenSymbol{\*\falt Arial Unicode MS};}{\f10\froman\fprq0\fcharset128 TimesNewRomanPSMT;}{\f11\froman\fprq0\fcharset128 TimesNewRomanPS-ItalicMT;}{\f12\froman\fprq0\fcharset128 Arial-ItalicMT;}{\f13\froman\fprq0\fcharset128 Courier New;}{\f14\froman\fprq0\fcharset128 TimesNewRomanPS-BoldMT;}{\f15\froman\fprq0\fcharset128 Arial-BoldItalicMT;}{\f16\froman\fprq0\fcharset128 CourierNewPS-BoldMT;}{\f17\froman\fprq0\fcharset128 CourierNewPSMT;}{\f18\froman\fprq0\fcharset128 Courier 10 Pitch;}{\f19\froman\fprq0\fcharset128 Courier-Bold;}{\f20\fnil\fprq2\fcharset0 Liberation Sans{\*\falt Arial};}{\f21\fnil\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f22\fnil\fprq2\fcharset0 OpenSymbol{\*\falt Arial Unicode MS};}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet{\s0\snext0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033 Normal;}
{\s1\sbasedon22\snext1\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f8\fs24\lang1033 Heading 1;}
{\s2\sbasedon22\snext2\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f8\fs24\lang1033 Heading 2;}
{\s3\sbasedon22\snext3\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f8\fs24\lang1033 Heading 3;}
{\*\cs15\snext15\cf2\ul\ulc0 Internet Link;}
{\*\cs16\snext16 Line numbering;}
{\*\cs17\snext17 Line Numbering;}
{\*\cs18\snext18 Numbering Symbols;}
{\*\cs19\snext19\dbch\af22\loch\f9 Bullets;}
{\*\cs20\snext20\b\dbch\af22\loch\f10\fs24 ListLabel 1;}
{\*\cs21\snext21\cf13\ul\ulc0\langfe255\lang255 Visited Internet Link;}
{\s22\sbasedon0\snext23\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f6\fs28\lang1033 Heading;}
{\s23\sbasedon0\snext23\sl288\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa140\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f7\fs24\lang1033 Text Body;}
{\s24\sbasedon23\snext24\sl240\slmult1\ql\keep\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f10\fs24\lang1033 List;}
{\s25\sbasedon0\snext25\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb120\sa120\keepn\ltrpar\cf1\i\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f11\fs24\lang1033 Caption;}
{\s26\sbasedon0\snext26\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f7\fs24\lang1033 Index;}
{\s27\sbasedon0\snext27\sl240\slmult1\ql\keep\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f10\fs24\lang1033 Text body;}
{\s28\sbasedon22\snext28\sl240\slmult1\qc\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb240\sa60\keepn\ltrpar\cf1\b\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f5\fs32\lang1033 Title;}
{\s29\sbasedon22\snext29\sl240\slmult1\qc\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb240\sa120\keepn\ltrpar\cf1\i\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f12\fs28\lang1033 Subtitle;}
{\s30\snext30\sl240\slmult1\ql\keep\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f13\fs20\lang1033 HTML Preformatted;}
{\s31\sbasedon0\snext31\sl240\slmult1\ql\keep\nowidctlpar\tqc\tx4320\tqr\tx8640\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\noline\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f7\fs24\lang1033 Header;}
{\s32\sbasedon0\snext32\sl240\slmult1\ql\keep\nowidctlpar\tqc\tx4320\tqr\tx8640\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\noline\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f7\fs24\lang1033 Footer;}
{\s33\sbasedon0\snext33\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f7\fs24\lang1033 Quotations;}
{\s34\sbasedon22\snext34\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f6\fs28\lang1033 Contents Heading;}
}{\*\listtable{\list\listtemplateid1
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'00.;}{\levelnumbers\'01;}\fi-360\li720}
{\listlevel\levelnfc4\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'01.;}{\levelnumbers\'01;}\fi-360\li1080}
{\listlevel\levelnfc2\leveljc2\levelstartat1\levelfollow0{\leveltext \'02\'02.;}{\levelnumbers\'01;}\fi-360\li1440}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'03.;}{\levelnumbers\'01;}\fi-360\li1800}
{\listlevel\levelnfc4\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'04.;}{\levelnumbers\'01;}\fi-360\li2160}
{\listlevel\levelnfc2\leveljc2\levelstartat1\levelfollow0{\leveltext \'02\'05.;}{\levelnumbers\'01;}\fi-360\li2520}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'06.;}{\levelnumbers\'01;}\fi-360\li2880}
{\listlevel\levelnfc4\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'07.;}{\levelnumbers\'01;}\fi-360\li3240}
{\listlevel\levelnfc2\leveljc2\levelstartat1\levelfollow0{\leveltext \'02\'08.;}{\levelnumbers\'01;}\fi-360\li3600}\listid1}
{\list\listtemplateid2
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9679 ?;}{\levelnumbers;}\f23\fi-360\li720}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9679 ?;}{\levelnumbers;}\f23\fi-360\li1080}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9679 ?;}{\levelnumbers;}\f23\fi-360\li1440}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9679 ?;}{\levelnumbers;}\f23\fi-360\li1800}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9679 ?;}{\levelnumbers;}\f23\fi-360\li2160}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9679 ?;}{\levelnumbers;}\f23\fi-360\li2520}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9679 ?;}{\levelnumbers;}\f23\fi-360\li2880}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9679 ?;}{\levelnumbers;}\f23\fi-360\li3240}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9679 ?;}{\levelnumbers;}\f23\fi-360\li3600}\listid2}
{\list\listtemplateid3
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9679 ?;}{\levelnumbers;}\f23\fi-360\li720}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f23\fi-360\li1080}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f23\fi-360\li1440}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f23\fi-360\li1800}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f23\fi-360\li2160}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f23\fi-360\li2520}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f23\fi-360\li2880}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f23\fi-360\li3240}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f23\fi-360\li3600}\listid3}
{\list\listtemplateid4
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'00.;}{\levelnumbers\'01;}\fi-360\li720}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'01.;}{\levelnumbers\'01;}\fi-360\li1080}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'02.;}{\levelnumbers\'01;}\fi-360\li1440}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'03.;}{\levelnumbers\'01;}\fi-360\li1800}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'04.;}{\levelnumbers\'01;}\fi-360\li2160}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'05.;}{\levelnumbers\'01;}\fi-360\li2520}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'06.;}{\levelnumbers\'01;}\fi-360\li2880}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'07.;}{\levelnumbers\'01;}\fi-360\li3240}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'08.;}{\levelnumbers\'01;}\fi-360\li3600}\listid4}
{\list\listtemplateid5
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'00.;}{\levelnumbers\'01;}\fi-360\li720}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'01.;}{\levelnumbers\'01;}\fi-360\li1080}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'02.;}{\levelnumbers\'01;}\fi-360\li1440}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'03.;}{\levelnumbers\'01;}\fi-360\li1800}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'04.;}{\levelnumbers\'01;}\fi-360\li2160}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'05.;}{\levelnumbers\'01;}\fi-360\li2520}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'06.;}{\levelnumbers\'01;}\fi-360\li2880}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'07.;}{\levelnumbers\'01;}\fi-360\li3240}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'08.;}{\levelnumbers\'01;}\fi-360\li3600}\listid5}
{\list\listtemplateid6
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi0\li0}\listid6}
}{\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}}{\*\generator LibreOffice/5.3.7.2$Linux_X86_64 LibreOffice_project/30m0$Build-2}{\info{\author bill }{\creatim\yr2012\mo11\dy18\hr13\min58}{\revtim\yr2018\mo6\dy5\hr18\min33}{\printim\yr2013\mo12\dy19\hr9\min42}}{\*\userprops}\deftab720
\viewscale125
{\*\pgdsctbl
{\pgdsc0\pgdscuse451\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\headery720\margbsxn1497\footery1097{\header\pard\plain \s31\sl240\slmult1\ql\keep\nowidctlpar\tqc\tx4320\tqr\tx8640\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\noline\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f7\fs24\lang1033\sl240\slmult1\ql\keep\nowidctlpar\tqc\tx4320\tqr\tx8640\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\cf1\kerning1\dbch\af20\langfe1081\rtlch \ltrch\loch\fs24\lang1033

\par }{\footer\pard\plain \s32\sl240\slmult1\ql\keep\nowidctlpar\tqc\tx4320\tqr\tx8640\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\noline\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f7\fs24\lang1033\sl240\slmult1\ql\keep\nowidctlpar\tqc\tx4320\tqr\tx8640\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar{\cf1\b\kerning1\dbch\af20\langfe1081\rtlch \ltrch\loch\fs18\lang1033\loch\f5\hich\af5
Setting up wxWidgets and Adapt It on Ubuntu Linux}{\cf1\kerning1\dbch\af20\langfe1081\rtlch \ltrch\loch\fs24\lang1033\loch\f10\hich\af10
\tab }{\cf1\b\kerning1\dbch\af20\langfe1081\rtlch \ltrch\loch\fs18\lang1033\loch\f5\hich\af5
Page }{\cf1\b\kerning1\dbch\af20\langfe1081\rtlch \ltrch\loch\fs18\lang1033
{\field{\*\fldinst  PAGE }{\fldrslt 28}}}{\cf1\b\kerning1\dbch\af20\langfe1081\rtlch \ltrch\loch\fs18\lang1033\loch\f5\hich\af5
 of }{\cf1\b\kerning1\dbch\af20\langfe1081\rtlch \ltrch\loch\fs18\lang1033
{\field{\*\fldinst  NUMPAGES }{\fldrslt 28}}}
\par }\pgdscnxt0 Default Style;}}
\formshade{\*\pgdscno0}\paperh15840\paperw12240\margl1440\margr1440\margt720\margb1097\sectd\sbknone\sectunlocked1\pgndec\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\headery720\margbsxn1497\footery1097{\header\pard\plain \s31\sl240\slmult1\ql\keep\nowidctlpar\tqc\tx4320\tqr\tx8640\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\noline\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f7\fs24\lang1033\sl240\slmult1\ql\keep\nowidctlpar\tqc\tx4320\tqr\tx8640\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\cf1\kerning1\dbch\af20\langfe1081\rtlch \ltrch\loch\fs24\lang1033

\par }{\footer\pard\plain \s32\sl240\slmult1\ql\keep\nowidctlpar\tqc\tx4320\tqr\tx8640\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\noline\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f7\fs24\lang1033\sl240\slmult1\ql\keep\nowidctlpar\tqc\tx4320\tqr\tx8640\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar{\cf1\b\kerning1\dbch\af20\langfe1081\rtlch \ltrch\loch\fs18\lang1033\loch\f5\hich\af5
Setting up wxWidgets and Adapt It on Ubuntu Linux}{\cf1\kerning1\dbch\af20\langfe1081\rtlch \ltrch\loch\fs24\lang1033\loch\f10\hich\af10
\tab }{\cf1\b\kerning1\dbch\af20\langfe1081\rtlch \ltrch\loch\fs18\lang1033\loch\f5\hich\af5
Page }{\cf1\b\kerning1\dbch\af20\langfe1081\rtlch \ltrch\loch\fs18\lang1033
{\field{\*\fldinst  PAGE }{\fldrslt 28}}}{\cf1\b\kerning1\dbch\af20\langfe1081\rtlch \ltrch\loch\fs18\lang1033\loch\f5\hich\af5
 of }{\cf1\b\kerning1\dbch\af20\langfe1081\rtlch \ltrch\loch\fs18\lang1033
{\field{\*\fldinst  NUMPAGES }{\fldrslt 28}}}
\par }\linemod5\linex283\linecont\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
{\*\ftnsep\chftnsep}\pgndec\pard\plain \s28\sl240\slmult1\qc\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb240\sa60\keepn\ltrpar\cf1\b\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f5\fs32\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb240\sa60{{\*\bkmkstart _Toce16b606}{\*\bkmkend _Toce16b606}\b0\dbch\af20\rtlch \ltrch\loch\lang3081
Setting up wxWidgets and Adapt It}{\rtlch \ltrch\loch
\line }{\b0\dbch\af20\rtlch \ltrch\loch\lang3081
on Ubuntu/Mint/Wasta Linux}
\par \pard\plain \s23\sl288\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa140\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f7\fs24\lang1033\sl288\slmult1\qc\li0\ri0\lin0\rin0\fi0{{\*\bkmkstart _Toc6fc94b53}\b\dbch\af20\rtlch \ltrch\loch\lang3081\loch\f5\hich\af5
by Bill Martin (Revised }{\b\dbch\af20\rtlch \ltrch\loch\lang3081\loch\f5\hich\af5
5}{\b\dbch\af20\rtlch \ltrch\loch\lang3081\loch\f5\hich\af5
 June 201}{{\*\bkmkend _Toc6fc94b53}\b\dbch\af20\rtlch \ltrch\loch\lang3081\loch\f5\hich\af5
8}{\b\dbch\af20\rtlch \ltrch\loch\lang3081\loch\f5\hich\af5
)}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120\dbch\af20\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\lang3081\loch\f10\hich\af10
Notes: }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033{\listtext\pard\plain  \u9679\'3f\tab}\ilvl0\ls2 \li1440\ri0\lin1440\rin0\fi-360\sl240\slmult1\tx3960\tx4320\tx4680\tx5040\li720\ri0\lin720\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\lang3081\loch\f10\hich\af10
These instructions assume you are running a recent version of Ubuntu or Wasta Linux. Setup for other Linux distributions, such as Debian Jessie, may differ in details, but should be similar. At the time of writing, the latest distribution of Ubuntu is 16.04 Xenial, an LTS release. The instructions involve downloading software, so they assume you have access to the Internet.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033{\listtext\pard\plain  \u9679\'3f\tab}\ilvl0\ls2 \li1440\ri0\lin1440\rin0\fi-360\sl240\slmult1\tx3960\tx4320\tx4680\tx5040\li720\ri0\lin720\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\lang3081\loch\f10\hich\af10
We recommend you install a }{\b\dbch\af20\rtlch \ltrch\loch\lang3081\loch\f10\hich\af10
64-bit }{\b\dbch\af20\rtlch \ltrch\loch\lang3081\loch\f14\hich\af14
amd64}{\dbch\af20\rtlch \ltrch\loch\lang3081\loch\f10\hich\af10
 version of Ubuntu, Linux Mint or Wasta Linux on your development computer in case you need to create the Linux packages for Adapt It. The amd64 version is compatible with any 64-bit Intel machine, including Intel-based Macs, and will allow you to create both 32- and 64-bit package versions for distribution.}
\par \pard\plain \s2\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f8\fs24\lang1033\sl240\slmult1\tx5976\tx6552\tx7704\li1080\ri0\lin1080\rin0\fi-360{{\*\bkmkstart _Toc50b5725b6}{\*\bkmkstart _Toc50b5725b}{\*\bkmkend _Toc50b5725b6}{\*\bkmkend _Toc50b5725b}\i\b\dbch\af20\rtlch \ltrch\loch\fs28\lang3081\loch\f15\hich\af15
Repository Organization}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch\lang3081\loch\f10\hich\af10
The Adapt It project repository is organized to keep the build environments separate for building on individual platforms. Since Adapt It is a cross-platform project that uses the same set of sources for each platform, the single set of source files are stored in a }{\b\dbch\af20\rtlch \ltrch\loch\lang3081\loch\f14\hich\af14
source}{\dbch\af20\rtlch \ltrch\loch\lang3081\loch\f10\hich\af10
 folder, and the individual platform specific setup and build products are kept in separate sub-folders of a }{\b\dbch\af20\rtlch \ltrch\loch\lang3081\loch\f14\hich\af14
bin}{\dbch\af20\rtlch \ltrch\loch\lang3081\loch\f10\hich\af10
 folder. The project is organized within the following directory structure:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\dbch\af20\rtlch \ltrch\loch\lang3081

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
adaptit}{\dbch\af20\rtlch \ltrch\loch\fs20\loch\f17\hich\af17
       }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
[the top or trunk folder for the project]}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f17\hich\af17
   }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
|__ bin}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f16\hich\af16
   }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
|     |}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f16\hich\af16
   }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
|     |__ linux}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f16\hich\af16
   }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
|     |}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f16\hich\af16
   }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
|     |__ mac}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f16\hich\af16
   }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
|     |}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f16\hich\af16
   }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
|     |__ win32}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f16\hich\af16
   }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
|}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f16\hich\af16
   }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
|__ source}{\dbch\af20\rtlch \ltrch\loch\fs20\loch\f17\hich\af17
    }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
[contains all .cpp and .h source files]}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f17\hich\af17
   }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\dbch\af20\rtlch \ltrch\loch\lang3081

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Note: There are other folders in the repository that are part of a full clone of the project, but they are not shown in the above directory tree for purposes of illustration.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\dbch\af20\rtlch \ltrch\loch\lang3081

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
The }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
adaptit/bin/linux}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 folder is where the project builds are performed for the Linux port. All of the configuration and Makefile related files are also located there, as well as CodeBlocks IDE project file for adaptit (called }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
adaptit.cbp)}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
. }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\dbch\af20\rtlch \ltrch\loch\lang3081

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
The default Ubuntu distribution does not come with all the software packages that are needed to actually develop software from sources. This documentation describes how to set up your Linux development machine to be able to develop Adapt It.}
\par \pard\plain \s2\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f8\fs24\lang1033\sl240\slmult1\tx4176\tx4752\tx5904\li720\ri0\lin720\rin0\fi0\sb0\sa60{\i\b\dbch\af20\rtlch \ltrch\loch\fs28\loch\f15\hich\af15
Automated Setup via the aid-dev-setup.sh Script}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
We have developed a script that, when run at the command-line, is designed to do the entire setup process on your Ubuntu, Linux Mint or Wasta Linux system. The script is called }{\b\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
aid-dev-setup.sh}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
, and is located within the scripts directory of the adaptit repository at GitHub.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
The aid-dev-setup.sh script automates the following setup functions:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033{\listtext\pard\plain  \u9679\'3f\tab}\ilvl0\ls3 \li1440\ri0\lin1440\rin0\fi-360\sl240\slmult1\li720\ri0\lin720\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Ensures that the developer machine's list of sources is up to date and includes the packages.sil.org/ubuntu repository, and the proper GPG key is installed.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033{\listtext\pard\plain  \u9679\'3f\tab}\ilvl0\ls3 \li1440\ri0\lin1440\rin0\fi-360\sl240\slmult1\li720\ri0\lin720\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Installs the developer tools and libraries that are necessary to develop Adapt It. The version of some of the libraries depends on the distribution of Linux you are using.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033{\listtext\pard\plain  \u9679\'3f\tab}\ilvl0\ls3 \li1440\ri0\lin1440\rin0\fi-360\sl240\slmult1\li720\ri0\lin720\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Offers to clone (or pull down) the latest state of the Adapt It repository to the development computer.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033{\listtext\pard\plain  \u9679\'3f\tab}\ilvl0\ls3 \li1440\ri0\lin1440\rin0\fi-360\sl240\slmult1\li720\ri0\lin720\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Queries the developer for their GitHub user.name and user.email and configures git with those values if they weren't previously configured.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033{\listtext\pard\plain  \u9679\'3f\tab}\ilvl0\ls3 \li1440\ri0\lin1440\rin0\fi-360\sl240\slmult1\li720\ri0\lin720\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Offers to configure and build the Adapt It project (both Debug and Release versions) by automatically making the necessary command-line calls.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
The aid-dev-setup.sh script can be downloaded from the Adapt-It GitHub repository. Go to the script's "raw" data page at the following URL:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\fs18\loch\f13\hich\af13
https://raw.githubusercontent.com/adapt-it/adaptit/master/scripts/aid-dev-setup.sh}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
The "raw" data page simply displays the text of the aid-dev-setup.sh script in the browser window. Once the raw data is displayed, you can save the script to your computer from your browser (such as Firefox) by choosing "Save Page As..." from the File menu. The name should be aid-dev-setup.sh. Save the file to the desktop or any convenient location.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120\dbch\af20\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Before you can run the aid-dev-setup.sh script, you need to make it executable. You can do Ctrl+Alt+T to open a terminal, then execute the following commands (assuming you saved the aid-dev-setup.sh script to your Desktop):}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f18\hich\af18
  }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f18\hich\af18
cd ~/Desktop}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f18\hich\af18
  }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f18\hich\af18
chmod +x aid-dev-setup.sh}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
When you are ready to run the script (with the Desktop directory still being current), simply invoke it in the terminal using this command:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\dbch\af20\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f13\hich\af13
  }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f13\hich\af13
./aid-dev-setup.sh}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\dbch\af20\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
The aid-dev-setup.sh script is somewhat interactive, so you should be in attendance while it is running. It offers to clone the adaptit project for you if you have not already done so. By default it puts your working copy of the adaptit project at the following location on your computer:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\dbch\af20\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f13\hich\af13
  }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f13\hich\af13
~/projects/adaptit/}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\dbch\af20\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
The base directory where the Linux make files are located is at:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f13\hich\af13
  }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f13\hich\af13
~/projects/adaptit/bin/linux/}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\dbch\af20\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
The debug and release builds are kept in separate child directories of the base directory, so the debug build along with its object files and the adaptit debug executable is located at:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\dbch\af20\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f13\hich\af13
  }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f13\hich\af13
~/projects/adaptit/bin/linux/build_debug/}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\dbch\af20\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
and the release build along with its oject files and the adaptit release executable is located at:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\dbch\af20\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f13\hich\af13
  }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f13\hich\af13
~/projects/adaptit/bin/linux/build_release/}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\dbch\af20\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
You can now build the Adapt It project on your Linux development computer at any time without needing to re-run the aid-dev-setup.sh script. }
\par \pard\plain \s3\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f8\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\rtlch \ltrch\loch
Build Adapt It using the make command}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\rtlch \ltrch\loch\loch\f10\hich\af10
After the aid-dev-setup.sh script has run at least once successfully, you can build the debug version again by changing to the }{\b\ab\rtlch \ltrch\loch\loch\f10\hich\af10
build_debug}{\rtlch \ltrch\loch\loch\f10\hich\af10
 directory and invoking the }{\b\ab\rtlch \ltrch\loch\loch\f10\hich\af10
make}{\rtlch \ltrch\loch\loch\f10\hich\af10
 command:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\rtlch \ltrch\loch\loch\f10\hich\af10

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f13\hich\af13
  }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f13\hich\af13
cd ~/Desktop/adaptit/bin/linux/build_debug}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f13\hich\af13
  }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f13\hich\af13
make}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\dbch\af20\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
You can build the release version again by changing to the }{\b\dbch\af20\ab\rtlch \ltrch\loch\loch\f10\hich\af10
build_release}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 directory and invoking the }{\b\dbch\af20\ab\rtlch \ltrch\loch\loch\f10\hich\af10
make}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 command:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f13\hich\af13
  }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f13\hich\af13
cd ~/Desktop/adaptit/bin/linux/build_release}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f13\hich\af13
  }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f13\hich\af13
make}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
If you want to force the build to rebuild all of the sources, and not just those source files that have changed, you can invoke the make clean command, followed by the make command from within the appropriate build directory:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f13\hich\af13
  }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f13\hich\af13
cd ~/Desktop/adaptit/bin/linux/build_debug}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f13\hich\af13
  }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f13\hich\af13
make clean}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f13\hich\af13
  }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f13\hich\af13
make}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\dbch\af20\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
If you have added or removed source files, or changed the configuration in some way you can invoke the configure script afresh for each of the build_debug and build_release directories. For debug builds use the following commands:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f13\hich\af13
  }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f13\hich\af13
cd ~/Desktop/adaptit/bin/linux/build_debug}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f13\hich\af13
  }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f13\hich\af13
../configure --prefix=/usr --enable-debug}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f13\hich\af13
  }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f13\hich\af13
make}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\dbch\af20\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
For release builds use the following commands:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f13\hich\af13
  }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f13\hich\af13
cd ~/Desktop/adaptit/bin/linux/build_release}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f13\hich\af13
  }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f13\hich\af13
../configure --prefix=/usr}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f13\hich\af13
  }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f13\hich\af13
make}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\dbch\af20\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
As you work you will want to actually run the freshly built debug or release executable. You just invoke the adaptit executable after a successful build from within the build_debug or build_release directories. To run the freshly built debug executable, do the following commands:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f13\hich\af13
  }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f13\hich\af13
cd ~/Desktop/adaptit/bin/linux/build_debug}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f13\hich\af13
  }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f13\hich\af13
./adaptit}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f13\hich\af13

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b0\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Notice that invoking an executable that resides within the current directory you must prefix it with }{\b\dbch\af20\ab\rtlch \ltrch\loch\fs18\loch\f13\hich\af13
./}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\b0\dbch\af20\rtlch \ltrch\loch\fs20\loch\f13\hich\af13

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b0\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Likewise, to run the freshly built release executable, do the following commands:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\b0\dbch\af20\rtlch \ltrch\loch\fs20\loch\f13\hich\af13

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f13\hich\af13
  }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f13\hich\af13
cd ~/Desktop/adaptit/bin/linux/build_release}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\langfe1033\rtlch \ltrch\fs20\loch\f13\hich\af13
  }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f13\hich\af13
./adaptit}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Most of the remaining sections of this document detail how to accomplish manually what the aid-dev-setup.sh script does for you automatically. Toward the end of the main document (about page 14) is an explanation of how to use the CodeBlocks IDE to build debug and release versions of adaptit. The Appendix discusses how to build Adapt It against custom builds of the wxWidgets library.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s3\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f8\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\rtlch \ltrch\loch
Note about wxDesigner}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\rtlch \ltrch\loch\loch\f10\hich\af10
Since 2003 (when Adapt It was ported over to use the wxWidgets library) the Adapt It team has used wxDesigner to manage its C++ resources. The wxDesigner software, however, is no longer available from its original creator's (Robert Roebling) web site. The C++ code that wxDesigner generates gives some deprecation warnings in the latest wxWidgets 3.x release, so we'll eventually need to pick another UI tool such as DialogBlocks or wxSmith to migrate our resource code to for future releases. In the mean time, a 64-bit amd64 debian Linux installer for wxDesigner (wxdesigneru_2.20-2_amd64.deb) is available from Bill Martin for use by Adapt It developers developing in Linux. Some symbolic link tweaks are needed to get wxDesigner to run on 14.04 and newer Linux systems which no longer have the libtiff.so.3 dynamic library required by wxDesigner.}
\par \pard\plain \s2\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f8\fs24\lang1033\sl240\slmult1\tx4176\tx4752\tx5904\li720\ri0\lin720\rin0\fi0\sb0\sa60{{\*\bkmkstart _Toc50b5725b67}{\*\bkmkend _Toc50b5725b67}\i\b\dbch\af20\rtlch \ltrch\loch\fs28\loch\f15\hich\af15
Manual Setup using apt-get command line}
\par \pard\plain \s27\sl240\slmult1\ql\keep\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f10\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch
You may wish to open the aid-dev-setup.sh script and see how the script automates the functions that are described for the manual setup step below.}
\par \pard\plain \s27\sl240\slmult1\ql\keep\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f10\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch
You can use a single }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
sudo apt-get}{\dbch\af20\rtlch \ltrch\loch
 call to install all the packages needed to setup wxWidgets and Adapt It directly from the command line. The packages you need to install will depend on whether you are using a}{\dbch\af20\rtlch \ltrch\loch
 Bionic based Linux (18.04),}{\dbch\af20\rtlch \ltrch\loch
 }{\dbch\af20\rtlch \ltrch\loch
a }{\dbch\af20\rtlch \ltrch\loch
Xenial based Linux (16.04), or an earlier version of Linux (before 16.04). If you are viewing this document on your developer machine, you can easily copy and paste the whole command line that is appropriate for your version of Linux below into a terminal and execute them in one go:}
\par \pard\plain \s27\sl240\slmult1\ql\keep\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f10\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch
If you are using a }{\b\dbch\af20\ab\rtlch \ltrch\loch
Bionic}{\dbch\af20\rtlch \ltrch\loch
 based Linux (18.04 or newer) copy and paste the following into your terminal:}
\par \pard\plain \s27\sl240\slmult1\ql\keep\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f10\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
sudo apt-get install git codeblocks }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
poedit }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
gnome-common libgtk-3-dev gcc-multilib uuid-dev curl libcurl4-gnutls-dev libwxbase3.0-0v5 libwxbase3.0-dev libwxgtk3.0-0v5 libwxgtk3.0-dev wx-common wx3.0-headers wx3.0-i18n }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
libcanberra-gtk-module}
\par \pard\plain \s27\sl240\slmult1\ql\keep\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f10\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch
If you are using a }{\b\dbch\af20\ab\rtlch \ltrch\loch
Xenial}{\dbch\af20\rtlch \ltrch\loch
 based Linux (16.04 or newer) copy and paste the following into your terminal:}
\par \pard\plain \s27\sl240\slmult1\ql\keep\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f10\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
sudo apt-get install git codeblocks gnome-common libgtk-3-0-dbg libgtk-3-dev gcc-multilib uuid-dev curl libcurl4-gnutls-dev libwxbase3.0-0v5 libwxbase3.0-0v5-dbg libwxbase3.0-dev libwxgtk3.0-0v5 libwxgtk3.0-0v5-dbg libwxgtk3.0-dev wx-common wx3.0-headers wx3.0-i18n}
\par \pard\plain \s27\sl240\slmult1\ql\keep\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f10\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch
If you are using a version of }{\b\dbch\af20\ab\rtlch \ltrch\loch
Linux earlier than 16.04}{\dbch\af20\rtlch \ltrch\loch
, copy and paste the following into your terminal:}
\par \pard\plain \s27\sl240\slmult1\ql\keep\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f10\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
sudo apt-get install git codeblocks gnome-common libgtk2.0-0-dbg libgtk2.0-dev gcc-multilib uuid-dev curl libcurl4-gnutls-dev libwxbase2.8-0 libwxbase2.8-dbg libwxbase2.8-dev libwxgtk2.8-0 libwxgtk2.8-dbg libwxgtk2.8-dev wx-common wx2.8-headers wx2.8-i18n}
\par \pard\plain \s27\sl240\slmult1\ql\keep\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f10\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch
Respond }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
yes}{\dbch\af20\rtlch \ltrch\loch
 or }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
y}{\dbch\af20\rtlch \ltrch\loch
 to the prompt telling you how much will be installed. Apt-get will download and install about 115 MB of additional packages (taking about 367 MB of additional disk space). Note: In addition to installing the Linux development command line tools and the }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
\u8211\'3fdbg}{\dbch\af20\rtlch \ltrch\loch
 and }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
\u8211\'3fdev}{\dbch\af20\rtlch \ltrch\loch
 libraries needed to build Adapt It, the above }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
apt-get install}{\dbch\af20\rtlch \ltrch\loch
 command also installs the Linux }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
git}{\dbch\af20\rtlch \ltrch\loch
 client and the }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
CodeBlocks}{\dbch\af20\rtlch \ltrch\loch
 IDE for Linux if they have not already been installed. }
\par \pard\plain \s2\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f8\fs24\lang1033\sl240\slmult1\tx4176\tx4752\tx5904\li720\ri0\lin720\rin0\fi0\sb0\sa60{{\*\bkmkstart _Toc6edbdb509}{\*\bkmkstart _Toc6edbdb50}{\*\bkmkend _Toc6edbdb509}{\*\bkmkend _Toc6edbdb50}\i\b\dbch\af20\rtlch \ltrch\loch\fs28\loch\f15\hich\af15
The packages.sil.org/ubuntu repository}
\par \pard\plain \s27\sl240\slmult1\ql\keep\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f10\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch
You may wish to open the aid-dev-setup.sh script and see how the script automates the functions that are described for the manual setup step below.}
\par \pard\plain \s27\sl240\slmult1\ql\keep\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f10\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\rtlch \ltrch\loch
Note: If you are using Wasta Linux, the steps in this section have already been done for you, so that the SIL repository will already be available in all versions of Wasta Linux.}
\par \pard\plain \s27\sl240\slmult1\ql\keep\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f10\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch
SIL has a repository for Ubuntu Linux software packages of particular interest to those involved in language and translation programs. This repository is the one where the Adapt It team releases Adapt It versions for Linux. The version of Adapt It that is available from the packages.sil.org/ubuntu repository varies over time, because the Linux distributions within the packages.sil.org/ubuntu repository are generally only available while a particular distribution is actively supported by Canonical. The Long Term Support (LTS) distributions are available for at least 5 years. Other interim distributions are generally only available for 9 months. See the schedule for Ubuntu releases at: https://wiki.ubuntu.com/LTS. }
\par \pard\plain \s27\sl240\slmult1\ql\keep\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f10\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch
In order to obtain Adapt It and other software from the packages.sil.org repository, you need to:}
\par \pard\plain \s27\sl240\slmult1\ql\keep\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f10\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch
(1) download the SIL Repository public key file,}{\rtlch \ltrch\loch
\line }{\dbch\af20\rtlch \ltrch\loch
(2) Access your Software Sources dialog}{\rtlch \ltrch\loch
\line }{\dbch\af20\rtlch \ltrch\loch
(3), Import the SIL repository key into your software sources, and}{\rtlch \ltrch\loch
\line }{\dbch\af20\rtlch \ltrch\loch
(4) add the SIL repository to your software sources. }
\par \pard\plain \s27\sl240\slmult1\ql\keep\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f10\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch
These steps are detailed below:}
\par \pard\plain \s27\sl240\slmult1\ql\keep\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f10\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch
(1) Download the SIL Repository public key. The key is available over the Internet. Run your browser and go to the http://packages.sil.org web page. As instructed there, right click on the link labeled }{\ul\ulc0\dbch\af20\rtlch \ltrch\loch
this link}{\dbch\af20\rtlch \ltrch\loch
 and select \uc2 \u8220\'81\'67Save Link As...\u8221\'81\'68. In the file dialog navigate to the folder where you want to save the \uc1 }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
sil.gpg}{\dbch\af20\rtlch \ltrch\loch
 key file. The Downloads folder is fine. Click Save. You can close or minimize your browser.}
\par \pard\plain \s27\sl240\slmult1\ql\keep\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f10\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch
(2) Access your Software Sources dialog. To use the SIL repository you have to set up your computer's Software Sources. Finding the Software Sources depends on what version of Linux you are using. If using the Unity interface you can access the }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Software Sources }{\dbch\af20\rtlch \ltrch\loch
applet by clicking on Dash Home and typing \uc2 \u8220\'81\'67software sources\u8221\'81\'68 in the search bar (or running the Ubuntu Software Center and selecting Software Sources... from its Edit\uc1 }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
 }{\dbch\af20\rtlch \ltrch\loch
menu). Alternately, if the Synaptic Package Manager is installed, you can run it and select }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Settings}{\dbch\af20\rtlch \ltrch\loch
->}{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Repositories}{\dbch\af20\rtlch \ltrch\loch
. In any case, your }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Software Sources}{\dbch\af20\rtlch \ltrch\loch
 dialog should be in view.}
\par \pard\plain \s27\sl240\slmult1\ql\keep\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f10\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch
(3) First, click on the Software Sources' }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Authentication}{\dbch\af20\rtlch \ltrch\loch
 tab. Click the }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Import Key File...}{\dbch\af20\rtlch \ltrch\loch
 button, and navigate to the }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
sil.gpg}{\dbch\af20\rtlch \ltrch\loch
 key file you saved in (1) above, select it and click OK. Leave the Software Sources dialog open for the next step below.}
\par \pard\plain \s27\sl240\slmult1\ql\keep\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f10\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch
(4) Next, click on the Software Sources' }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Other Software}{\dbch\af20\rtlch \ltrch\loch
 tab. Click the }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Add...}{\dbch\af20\rtlch \ltrch\loch
 button, and enter the following in the APT line:}
\par \pard\plain \s27\sl240\slmult1\ql\keep\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f10\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
deb http://packages.sil.org/ubuntu xenial main}
\par \pard\plain \s27\sl240\slmult1\ql\keep\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f10\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch
If you have a Linux computer that is running a different version of Ubuntu, just substitute instead the distribution name that you are actually running: }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
precise}{\b0\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
,}{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
 trusty}{\b0\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
,}{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
 }{\b\dbch\af20\rtlch \ltrch\loch
viv}{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
id}{\b0\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
,}{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
 }{\b0\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
or}{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
 wily}{\dbch\af20\rtlch \ltrch\loch
.}
\par \pard\plain \s27\sl240\slmult1\ql\keep\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f10\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch
If using Unity it may take a minute or two for it to recognize the change and read the new repositories. If using the Synaptic Package Manager click }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Reload}{\dbch\af20\rtlch \ltrch\loch
 to get the package manager to read the new repositories. You should now be able to find the adaptit application. In Unity's Ubuntu Software Center search for }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
adaptit}{\dbch\af20\rtlch \ltrch\loch
. (In the Synaptic Package manager, click on the Search button and search for }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
adaptit}{\dbch\af20\rtlch \ltrch\loch
.) You should see two packages for Adapt It: }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
adaptit}{\dbch\af20\rtlch \ltrch\loch
 and }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
adaptit-docs}{\dbch\af20\rtlch \ltrch\loch
 (you may need to click on the \uc2 \u8220\'81\'67show 1 technical item\u8221\'81\'68 link in the Ubuntu Software Center to see the adaptit-docs package). Go ahead and install both Adapt It packages. Once installed Adapt It will be available in the Unity interface by clicking on the Dash Home button and start typing \uc1 }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
adaptit}{\dbch\af20\rtlch \ltrch\loch
 in the search field and select the Adapt It icon when it appears. Adapt It will be a menu item under }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Applications > Office}{\dbch\af20\rtlch \ltrch\loch
 in the older classic Gnome/Ubuntu interface.}
\par \pard\plain \s27\sl240\slmult1\ql\keep\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f10\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch
Now, you can close the Software Sources (or Synaptic Package Manager). }
\par \pard\plain \s2\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f8\fs24\lang1033\sl240\slmult1\tx4176\tx4752\tx5904\li720\ri0\lin720\rin0\fi0\sb0\sa60{{\*\bkmkstart _Toc6edbdb501011}{\*\bkmkstart _Toc6edbdb5010}{\*\bkmkend _Toc6edbdb501011}{\*\bkmkend _Toc6edbdb5010}\i\b\dbch\af20\rtlch \ltrch\loch\fs28\loch\f15\hich\af15
Notes about the wxWidgets library}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\rtlch \ltrch\loch\loch\f10\hich\af10
The current \uc2 \u8220\'81\'67Stable Release\u8221\'81\'68 of the wxWidgets library at \uc1 }{{\field{\*\fldinst HYPERLINK "http://www.wxwidgets.org" }{\fldrslt {\cf2\ul\ulc0\ul\ulc0\rtlch \ltrch\loch\loch\f10\hich\af10
www.wxwidgets.org}{}}}\rtlch \ltrch\loch\loch\f10\hich\af10
 as of May 2016 is 3.0.2. The wxWidgets repository is currently developing version 3.1.x. The Adapt It code base is currently compatible with any of the stable releases of the wxWidgets library. For the Windows port of Adapt It we are currently building Adapt It releases against the 2.8.12 wxWidgets library, and test builds against the 3.0.2 library (testing for possible bugs in the newer library). On Linux we normally build against whatever dynamic library version of wxWidgets that comes as part of the Linux distribution. For the Linux distributions we support, this is either the 2.8.12 or the 3.0.x version of the wxWidgets library, depending on which Ubuntu distribution is running on the computer that Adapt It is run from. Note: Since Adapt It will automatically build against the dynamic wxWidgets library that comes with your Linux distribution, it is}{\rtlch \ltrch\loch
 }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
not}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 necessary to build the wxWidgets library on your Linux development system in order to build Adapt It. See the Appendix of this document if you want to build the latest daily snapshot version of wxWidgets and build Adapt It for Linux against that version \u8211\'3f something you might do if you want to check out a new feature of wxWidgets that is only available in the latest version, or if you\uc2 \u8217\'81\'66re chasing an obscure bug that may require you to debug right into the wxWidgets code.\uc1 }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\dbch\af20\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
You can determine which version of the wxWidgets library is available as a dynamic library in the distribution of Ubuntu you are running by typing the following command in a terminal window:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\dbch\af20\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
wx-config --version}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\dbch\af20\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
The }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
wx-config}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 command will return something like }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
2.8.12}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 in the terminal window. Again, please note that, if for some reason you wish to build Adapt It for Linux against a later version of the wxWidgets library (or a local build of the version 2.8.12 library), it is possible (but entirely optional) to do so. Again, see the Appendix in this document for more information on how to set up a newer or non-distribution build of the wxWidgets library and build Adapt It against that different library.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa0\dbch\af20\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Now we can focus on getting the }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
adaptit}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 project sources from GitHub cloned to your development computer, and compiling them at the command line. A later section describes how to build adaptit within the Linux version of the CodeBlocks IDE.}
\par \pard\plain \s2\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f8\fs24\lang1033\sl240\slmult1\tx4176\tx4752\tx5904\li720\ri0\lin720\rin0\fi0\sb0\sa60{{\*\bkmkstart _Toc6d9445a812}{\*\bkmkstart _Toc6d9445a8}{\*\bkmkend _Toc6d9445a812}{\*\bkmkend _Toc6d9445a8}\i\b\dbch\af20\rtlch \ltrch\loch\fs28\loch\f15\hich\af15
Cloning the adaptit project from GitHub}
\par \pard\plain \s27\sl240\slmult1\ql\keep\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f10\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch
You may wish to open the aid-dev-setup.sh script and see how the script automates the functions that are described for the manual setup step below.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Start a Terminal session and type the following at the command line:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
git}{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
 --version}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
If your system reports that "the program 'git' is not currently installed", you should go back to the }{\b\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Manual}{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
 Setup using apt-get command line}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 section of this document above, and ensure that you have installed }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
all}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 of the Linux packages that are listed there, which include the }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
git}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 client.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
We recommend that you place your working copy of the adaptit repository within a directory named projects located in your Home directory. This is the default location where the aid-dev-setup.sh script:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
~/projects/adaptit}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
If a }{\b\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
projects}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 folder does not yet exist at this path you can open a terminal and execute these commands:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
cd}{\rtlch \ltrch\loch
\line }{\b\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
mkdir projects}{\rtlch \ltrch\loch
\line }{\b\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
cd ~/projects}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Then, from within your projects folder, you can clone the }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
adaptit}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 project from its open source repository by typing this command:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git clone https://github.com/adapt-it/adaptit.git}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
This command will clone the entire adaptit repository to your local computer and it can function as your working directory for Adapt It development. If you are contributing to the Adapt It project you need to communicate with the Adapt It team (}{{\field{\*\fldinst HYPERLINK "mailto:bill_martin@sil.org" }{\fldrslt {\cf2\ul\ulc0\cf9\ul\ulc0\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
bill_martin@sil.org}{\cf2\ul\ulc0\cf2\ul\ulc0\rtlch \ltrch\loch
, }{}}}{\field{\*\fldinst HYPERLINK "mailto:bruce_waters@sil.org" }{\fldrslt {\cf2\ul\ulc0\cf9\ul\ulc0\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
bruce_waters@sil.org}{}}}\rtlch \ltrch\loch
, or}{\cf9\ul\ulc0\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 erik_brommers@sil.org}{\dbch\af20\rtlch \ltrch\loch
) }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
and obtain permission from them to commit any changes you contribute to the GitHub repository. Note: If you wish to commit any changes to the adaptit repository, you will be asked for your GitHub user name and password.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
If you do not have commit privileges, you can still clone the Adapt It source tree as described above and do whatever you wish to it under the terms of its open source license.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
At this point we should have everything set up in the project so that we can now focus on building Adapt It either from the Linux command line or from within the CodeBlocks IDE.}
\par \pard\plain \s2\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f8\fs24\lang1033\sl240\slmult1\tx4176\tx4752\tx5904\li720\ri0\lin720\rin0\fi0\sb0\sa60{{\*\bkmkstart _Toc6d9445a81315}{\*\bkmkstart _Toc6d9445a813}{\*\bkmkend _Toc6d9445a81315}{\*\bkmkend _Toc6d9445a813}\i\b\dbch\af20\rtlch \ltrch\loch\fs28\loch\f15\hich\af15
Building and Running Adapt It from the Command Line}
\par \pard\plain \s27\sl240\slmult1\ql\keep\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f10\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch
You may wish to open the aid-dev-setup.sh script and see how the script automates the functions that are described for the manual setup step below.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
With the build packages installed and the adaptit project cloned to your development computer, it is now possible to build Adapt It from the command line. Here are the steps:}
\par \pard\plain \s3\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f8\fs24\lang1033\sl240\slmult1\tx6120\tx6840\tx8280\li1080\ri0\lin1080\rin0\fi0\sb0\sa60{{\*\bkmkstart _Toc3feb12bf15}{\*\bkmkstart _Toc3feb12bf}{\*\bkmkend _Toc3feb12bf15}{\*\bkmkend _Toc3feb12bf}\b\dbch\af20\rtlch \ltrch\loch\fs26\loch\f5\hich\af5
Building a debug version of Adapt It}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Initial setup steps}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 (usually not repeated):}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\tx4680\tx5040\tx5400\tx5760\tx7200\li1440\ri0\lin1440\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
1. }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
We'll keep the build products in a separate folder which I\uc2 \u8217\'81\'66ll name \uc1 }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
build_debug}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 that we create as a child directory of }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
~/projects/adaptit/bin/linux.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\tx4680\tx5040\tx5400\tx5760\tx7200\li1440\ri0\lin1440\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
2. }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
So, cd into the }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
~/projects/adaptit/bin/linux}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 folder and create a }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
build_debug}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 folder there:}{\rtlch \ltrch\loch
\line }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
cd ~/projects/adaptit/bin/linux}{\rtlch \ltrch\loch
\line }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
mkdir build_debug}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\tx4680\tx5040\tx5400\tx5760\tx7200\li1440\ri0\lin1440\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
3. }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Change to the }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
build_debug}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 directory you just created:}{\rtlch \ltrch\loch
\line }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
cd build_debug}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\tx4680\tx5040\tx5400\tx5760\tx7200\li1440\ri0\lin1440\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
4. }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
From within the build directory, invoke configure from the parent }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
linux}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 directory:}{\rtlch \ltrch\loch
\line }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
../configure --prefix=/usr --enable-debug}{\rtlch \ltrch\loch
\line }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Note: The invocation of }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
configure}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 here is done initially, but subsequently it needs to be invoked only as needed - if something changes about the configuration, or if some error during the next }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
make}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 step indicates that configure should be called again.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\tx2160\tx2520\li360\ri0\lin360\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Routine steps}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 (for routine builds after the build folder exists and configure has been called):}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\tx4680\tx5040\tx5400\tx5760\tx7200\li1440\ri0\lin1440\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
1. }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
For routine builds just change to the }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
build_debug}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 folder and invoke the }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
make}{\b0\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
 command}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
:}{\rtlch \ltrch\loch
\line }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
cd ~/projects/adaptit/bin/linux/build_debug}{\rtlch \ltrch\loch
\line }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
make}{\rtlch \ltrch\loch
\line \line }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
The }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
make}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 command builds the }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
adaptit}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 executable program file, by compiling all of its source files using the g++ compiler, and linking it dynamically with the distribution\uc2 \u8217\'81\'66s existing wxWidgets library. If programming errors are encountered, the make process exits with an \uc1 }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
error message}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
. When that happens correct the code within the indicated source file(s) that are in error using }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
gedit}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 or your favorite editor, save the source file, and invoke }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
make}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 again. Repeat this process until you get a clean }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
make}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 report (no error) and the }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
adaptit}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 binary is created in the current }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
build_debug}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 folder.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\tx4680\tx5040\tx5400\tx5760\tx7200\li1440\ri0\lin1440\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
2. }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Run the freshly built adaptit executable from the command line}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
. If the }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
make}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 step (above) completes without error, the Adapt It application will be called }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
adaptit}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 and can be run by invoking it (while you are in the }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
build_debug}{\dbch\af20\rtlch \ltrch\loch\fs20\loch\f17\hich\af17
 }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
folder):}{\rtlch \ltrch\loch
\line }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
./adaptit}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
If you get any errors when invoking the }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
../configure}{\b\dbch\af20\rtlch \ltrch\loch\fs18\loch\f16\hich\af16
 \u8211\'3fprefix=/usr \u8211\'3fenable-debug}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 and }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
make}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 commands from within the }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
build_debug}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 directory, it might help to invoke the following command:}{\rtlch \ltrch\loch
\line \line }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
make clean}{\rtlch \ltrch\loch
\line \line }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
or change temporarily back to the }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
~/adaptit/bin/linux}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 folder and invoke:}{\rtlch \ltrch\loch
\line }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
./autogen.sh}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
and try invoking the }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
../configure}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 and }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
make}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 commands again as described above.}
\par \pard\plain \s3\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f8\fs24\lang1033\sl240\slmult1\tx6120\tx6840\tx8280\li1080\ri0\lin1080\rin0\fi0\sb0\sa60{{\*\bkmkstart _Toc3feb12bf1619}{\*\bkmkstart _Toc3feb12bf16}{\*\bkmkend _Toc3feb12bf1619}{\*\bkmkend _Toc3feb12bf16}\b\dbch\af20\rtlch \ltrch\loch\fs26\loch\f5\hich\af5
Building a release (non-debug) version of Adapt It}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
This is similar to the process described for building a debug version, except that we use a separate directory that we create named }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
build_release}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 for the build products, and we call the configure script without the }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
--enable-debug}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 option. Here are the abbreviated command line steps:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\tx2160\tx2520\li360\ri0\lin360\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
cd ~/projects/adaptit/bin/linux}{\rtlch \ltrch\loch
\line }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
mkdir build_release}{\rtlch \ltrch\loch
\line }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
cd build_release}{\rtlch \ltrch\loch
\line }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
../configure --prefix=/usr}{\rtlch \ltrch\loch
\line }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
make}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Again the release version you just built can be executed by running:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\tx2160\tx2520\li360\ri0\lin360\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
./adaptit}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
from within the }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
~/adaptit/bin/linux/build_release}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 directory.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Note: When adaptit is run from the terminal, you will see a variety of warnings and even some CRITICAL warning messages, mostly relating to the Glib-Gobject library. For example:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\tx2160\tx2520\li360\ri0\lin360\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\fs16\loch\f16\hich\af16
(adaptit:7071): GLib-GObject-WARNING **: instance of invalid non-instantiatable type `(null)'}{\rtlch \ltrch\loch
\line \line }{\b\dbch\af20\rtlch \ltrch\loch\fs16\loch\f16\hich\af16
(adaptit:7071): GLib-GObject-CRITICAL **: g_signal_handlers_disconnect_matched: assertion `G_TYPE_CHECK_INSTANCE (instance)' failed}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
We have tried to track down the source of these warnings and messages, but so far without much success. They are not triggered from within Adapt It, but most likely from within the wxWidgets library which wraps the GTK library on the Linux port. The messages do not appear to affect the running or stability of Adapt It, so you can safely ignore them. Someday when we have time we may figure out how to avoid them. They do not appear when the Adapt It code is built on the Windows platform using the Visual Studio compiler.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
See the Appendix for information if you encounter errors when invoking the configure command. In such cases you might need to recreate the configuration by "Running the autotools" as described there.}
\par \pard\plain \s3\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f8\fs24\lang1033\sl240\slmult1\tx6120\tx6840\tx8280\li1080\ri0\lin1080\rin0\fi0\sb0\sa60{{\*\bkmkstart _Toc34ae35b31}\b\dbch\af20\rtlch \ltrch\loch\fs26\loch\f5\hich\af5
Adding or Removing Source Files from the project \u8211\'3f in Makefile.am}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
The }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
Makefile.am}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 file is where to indicate which source files are used to build the application in command line Linux builds. The Makefile.am file for the adaptit project is located at:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
projects/adaptit/bin/linux/Makefile.am}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\widctlpar\li0\ri0\lin0\rin0\fi0{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
From time to time a developer needs to add new source files (or remove existing ones) from the adaptit project. To add or remove source files from the Linux command line build system, just do the following:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\widctlpar\tx4680\tx5040\tx5400\tx5760\tx7200\li1440\ri0\lin1440\rin0\fi0{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
1. }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Edit the Makefile.am file}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 \u8211\'3f you can use gedit or your favorite editor. The Makefile.am is structured so that it automatically includes all header (*.h) files via the following lines at the top of the Makefile.am file:}{\rtlch \ltrch\loch
\line \line }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
# these are the headers for your project}{\rtlch \ltrch\loch
\line }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
noinst_HEADERS = $(wildcard $(srcdir)/../../source/*.h)}{\rtlch \ltrch\loch
\line \line }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Therefore, you only need to add cpp files explicitly by name. Source files are added or removed by editing the long}{\rtlch \ltrch\loch
\line \line }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
adaptit_SOURCES =}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 }{\rtlch \ltrch\loch
\line \line }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
line farther down in the file. Note: Each cpp file is given with its relative path (relative to the }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
projects/adaptit/bin/linux}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 directory where the Makefile.am is located). Use the backslash }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
\\}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 character to indicate soft line breaks in the long line, and to keep some semblance of alphabetical ordering to the list of sources in the long line. You can insert new sources into the list \u8211\'3f just separate the new entries from the others by a space and ensure that each cpp source file has the }{\b\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
../../source/}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 relative path prefix, and each line in the list has a backslash character as the last character in the line once editing is complete. Sources can be removed from the long }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
adaptit_SOURCES =}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 line in the same way.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\widctlpar\tx4680\tx5040\tx5400\tx5760\tx7200\li1440\ri0\lin1440\rin0\fi0{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
2. }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Save the Makefile.am with the new content}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
. After saving, you will need to rebuild the project at the command line, of course, for the changes to be built into the app. See the }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Building and Running Adapt It from the Command Line}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 section above. In most cases you only need to call the }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
make}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 command to rebuild after editing Makefile.am. In some rare cases, or if there is a build error, you may need to execute the }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
autogen.sh}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 script from within the }{\b\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
projects/}{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
adaptit/bin/linux/}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 directory followed by the usual }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
../configure}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 and }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
make}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 calls from within the }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
adaptit/bin/linux/build_debug/}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 directory.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\widctlpar\tx4680\tx5040\tx5400\tx5760\tx7200\li1440\ri0\lin1440\rin0\fi0{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
3. }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Commit the changed Makefile.am and Makefile.in files to the repository using appropriate git commit commands}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
. Open a Terminal and execute the following commands to first display any changed files, and then commit the appropriate ones to the external GitHub repository:}{\rtlch \ltrch\loch
\line \line }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
cd ~/projects/adaptit}{\rtlch \ltrch\loch
\line }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git status}{\rtlch \ltrch\loch
\line \line }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Look at the list of "modified" files (listed under "Changes not staged for commit:" and showing their relative path prefixed to their file names). If you want to commit all changed files }{\rtlch \ltrch\loch\loch\f10\hich\af10
(in the list that are not yet staged for commit)}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
, you can simply invoke git as follows:}{\rtlch \ltrch\loch
\line \line }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git commit -m"Comment ..."}{\rtlch \ltrch\loch
\line \line }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
If, however, you only want to specify certain changed files to commit, you can do so using wild cards or by including path/filename path/filename \uc2 \u8230\'81\'63 on the command line, as shown in the following examples:\uc1 }{\rtlch \ltrch\loch
\line \line }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git commit source/Adapt_It* -m"Comment ..."}{\rtlch \ltrch\loch
\line \line }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
or}{\rtlch \ltrch\loch
\line \line }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git commit source/Adapt_It.cpp source/helpers.h -m"Comment \uc2 \u8230\'81\'63"\uc1 }{\rtlch \ltrch\loch
\line }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\widctlpar\tx4680\tx5040\tx5400\tx5760\tx7200\li1440\ri0\lin1440\rin0\fi0{\b\rtlch \ltrch\loch\loch\f10\hich\af10
4. }{\b\rtlch \ltrch\loch\loch\f10\hich\af10
Push the committed files to the repository using appropriate git push commands.}{\rtlch \ltrch\loch\loch\f10\hich\af10
 Under the git system, committed files remain on the local user's machine until they are pushed to the external GitHub repository. After executing the commit command described above, execute the push command:}{\rtlch \ltrch\loch
\line \line }{\b\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git push}{\rtlch \ltrch\loch
\line \line }{\rtlch \ltrch\loch\loch\f10\hich\af10
Git will ask you for your git user name and password. If someone else has pushed changes to the adaptit repository since your last pull request, the git push command might issue an error and inform you that you need to execute a git pull before you can successfully do a git push operation.}
\par \pard\plain \s3\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f8\fs24\lang1033\sl240\slmult1\tx6120\tx6840\tx8280\li1080\ri0\lin1080\rin0\fi0\sb0\sa60{{\*\bkmkstart _Toc34ae35b31}{\*\bkmkstart _Toc34ae35b3}\i\b\dbch\af20\rtlch \ltrch\loch\fs28\loch\f15\hich\af15
Building and Running Adapt It from the }{{\*\bkmkend _Toc34ae35b31}{\*\bkmkend _Toc34ae35b3}\b\dbch\af20\rtlch \ltrch\loch\fs26\loch\f5\hich\af5
the CodeBlocks IDE}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
CodeBlocks should be installed on your system if you followed the instructions in the }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Fast Setup using apt-get command line}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 section near the beginning of this document. }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
To use CodeBlocks to build Adapt It, simply do the following:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\tx3960\tx4320\tx4680\tx5040\tx6480\li720\ri0\lin720\rin0\fi-360\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
1.\tab }{\b\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Run CodeBlocks}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
. From the Unity Dash home, start typing CodeBlocks in the Search bar, and click on the CodeBlocks icon. }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\tx3960\tx4320\tx4680\tx5040\tx6480\li720\ri0\lin720\rin0\fi-360\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
2.\tab }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Open the adaptit.cbp project}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
. From within CodeBlocks click on File > Open, and navigate to your }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
~/projects/adaptit/bin/linux/}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 folder. Click on the }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
adaptit.cbp}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 file and Click }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Open}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\tx3960\tx4320\tx4680\tx5040\tx6480\li720\ri0\lin720\rin0\fi-360\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
3.\tab }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Build Adapt It}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
. Set the \uc2 \u8220\'81\'67Build target\u8221\'81\'68 to either \uc1 }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Debug}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 or }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Release}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
.  Other possible targets may appear in the project, but normally you won\uc2 \u8217\'81\'66t need to use them.  (They\u8217\'81\'66re for building Adapt It against other versions of wxWidgets than the one installed by default in Ubuntu, and we describe this process later in the Appendix.)  So just choose either Debug or Release.  Now select \uc1 }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Clean}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 from the }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Build}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 menu, and then }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Build}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 from the }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Build}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 menu (or Ctrl+F9, or click on the sprocket shaped icon at the left end of the CodeBlocks toolbar). Note: The builds are always Unicode on Linux even though the \uc2 \u8220\'81\'67Build target\u8221\'81\'68 indicates just \u8220\'81\'67Debug\u8221\'81\'68 or \u8220\'81\'67Release.\u8221\'81\'68\uc1 }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
If CodeBlocks generates a compile error about a missing function or symbol, it might be that a developer has forgotten to update the CodeBlocks project after adding one or more new source files to the CodeBlocks project (for example, after adding them to Visual Studio on the Windows platform or Xcode on the Mac platform). See the next section on adding or removing source files from the CodeBlocks project.}
\par \pard\plain \s3\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f8\fs24\lang1033\sl240\slmult1\tx6120\tx6840\tx8280\li1080\ri0\lin1080\rin0\fi0\sb0\sa60{{\*\bkmkstart _Toc6618880221}{\*\bkmkstart _Toc66188802}{\*\bkmkend _Toc6618880221}{\*\bkmkend _Toc66188802}\b\dbch\af20\rtlch \ltrch\loch\fs26\loch\f5\hich\af5
Adding or Removing Source Files from the CodeBlocks Project}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Occasionally, new source files need to be added to the CodeBlocks adaptit project, or existing source files need to be removed from the project to keep the Linux CodeBlocks project in sync with the other development environments. The inventory of files can get out of sync if a developer adds or removes source files in one of the other developer tools (on a different platform) and that developer is not able for some reason to update the project\uc2 \u8217\'81\'66s files that are included in the Linux CodeBlocks project).\uc1 }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\tx3960\tx4320\tx4680\tx5040\tx6480\li720\ri0\lin720\rin0\fi-360\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
1.\tab }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
To add new source files}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 to the CodeBlocks adaptit project, select }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Project > Add files\uc2 \u8230\'81\'63\uc1 }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 and navigate to the }{\b\dbch\af20\rtlch \ltrch\loch\fs18\loch\f16\hich\af16
adaptit/source}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 folder. Select the files to be added and click on the Open button. In the Multiple Selection dialog verify that both Debug and Release have ticks in their check boxes and click OK. The source files are now part of the CodeBlocks adaptit project. }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\tx3960\tx4320\tx4680\tx5040\tx6480\li720\ri0\lin720\rin0\fi-360\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
2.\tab }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
To remove existing source files }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
from the CodeBlocks adaptit project, the preferred (and safest) way is to select the }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Projects}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 tab of the }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Management}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 window. Open the }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Sources}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 > }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
source}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 tree and remove the appropriate cpp source file by right-clicking on the file name and selecting \uc2 \u8220\'81\'67\uc1 }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Remove file from project}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
.\uc2 \u8221\'81\'68 Similarly, open the \uc1 }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Headers}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 > }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
source}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 tree and remove the corresponding .h file by right-clicking on the file name and selecting \uc2 \u8220\'81\'67\uc1 }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Remove file from project}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
.\uc2 \u8221\'81\'68 \uc1 }{\rtlch \ltrch\loch
\line \line }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
If you need to remove many files at once you can do so utilizing the Project > Remove files.. menu selection. But }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
beware}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 \u8211\'3f this Multiple selection dialog is dangerous! All files in the entire project are selected by default! Before you click on the OK button, you will need to }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
first click on the \uc2 \u8220\'81\'67Deselect All\u8221\'81\'68 button\uc1 }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
, then use the \uc2 \u8220\'81\'67Wildcard select\u8221\'81\'68 button and select the files that are to be deleted by entering a wild card, or just scroll through the lengthy list and manually selecting the files to be removed by ticking the appropriate check boxes. \uc1 }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\tx3960\tx4320\tx4680\tx5040\tx6480\li720\ri0\lin720\rin0\fi-360\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
3.\tab }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Remember to commit and push the changed CodeBlocks project (adaptit.cbp) file to the repository using the git client.}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 Open a Terminal and execute the following commands to first display any changed files, and then commit the appropriate ones to the external git repository:}{\rtlch \ltrch\loch
\line }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
cd ~/projects/adaptit}{\rtlch \ltrch\loch
\line }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git status}{\rtlch \ltrch\loch
\line \line }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Look at the list of changed files (those in the "Changes not staged for commit" list). If you want to commit all changed files, you can simply invoke git as follows:}{\rtlch \ltrch\loch
\line \line }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git commit -m"Comment ..."}{\rtlch \ltrch\loch
\line \line }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
If, however, you only want to specify certain changed files you can do so using wild cards or by including path/filename path/filename \uc2 \u8230\'81\'63 on the command line, as shown in the following examples:\uc1 }{\rtlch \ltrch\loch
\line \line }{\b\dbch\af20\rtlch \ltrch\loch\fs18\loch\f16\hich\af16
git commit source/Adapt_It* -m"Comment ..."}{\rtlch \ltrch\loch
\line \line }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
or}{\rtlch \ltrch\loch
\line \line }{\b\dbch\af20\rtlch \ltrch\loch\fs18\loch\f16\hich\af16
git commit source/Adapt_It.cpp source/helpers.h -m"Comment \uc2 \u8230\'81\'63"\uc1 }{\rtlch \ltrch\loch
\line \line }{\b0\rtlch \ltrch\loch\loch\f10\hich\af10
Finally, make sure you push the files to the GitHub repository:}{\rtlch \ltrch\loch
\line \line }{\b0\rtlch \ltrch\loch\fs18\loch\f16\hich\af16
git push}{\rtlch \ltrch\loch
\line \line }{\b0\rtlch \ltrch\loch\loch\f10\hich\af10
and enter your git username and password.}
\par \pard\plain \s3\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f8\fs24\lang1033\sl240\slmult1\tx6120\tx6840\tx8280\li1080\ri0\lin1080\rin0\fi0\sb0\sa60{{\*\bkmkstart _Toc661888022225}{\*\bkmkstart _Toc6618880222}{\*\bkmkend _Toc661888022225}{\*\bkmkend _Toc6618880222}\b\dbch\af20\rtlch \ltrch\loch\fs26\loch\f5\hich\af5
Working with Git on Linux (after initial cloning of the adaptit project):}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Some IDEs are supposed to be capable of working with Git internally, but I've not tried to use git within CodeBlocks or any other Linux IDE. I've just used git from the command line (as demonstrated above) when working on the Linux port.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
The initial cloning of the adaptit project\uc2 \u8217\'81\'66s repository tree was described above in the \uc1 }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Cloning the adaptit project from GitHub}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 section of this document.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
You may want to use one or more of the following common Git commands at the command line (from within the }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
~/projects/adaptit/}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 project folder):}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git clone https://github.com/adapt-it/adaptit.git}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git pull}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git status}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
\tab git checkout <file>}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git diff source/<filename>}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git commit -m"comment ..." [only with adaptit commit rights]}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git add source/<filename> [only with adaptit member commit rights]}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git rm source/<filename> [only with adaptit member commit rights]}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Note: The }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
git add}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 and }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
git rm}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 commands must be followed by a }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
git commit }{\b0\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
and a}{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
 git push}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 command to commit the additions or removals in the external repository. There are many other git commands that you might find useful. See the git man pages or an online tutorial for more information.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
1.}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
git}{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
 clone ...}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 I described how to do the initial clone of the adaptit project using git in the instructions above. If ever you needed to delete a previous clone of the project and re-clone the project, you can do so easily. Just delete the whole adaptit project folder from your local machine and clone the project again. Usually, though you would only do a checkout once on a given computer.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
2.}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f10\hich\af10
git}{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
 pull}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
. You should invoke this command often to keep your sources up to date. The }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git pull}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 command will go through the usual process of comparing your files with those on GitHub's server, updating any changes made by other users, merging if necessary, etc., and reporting the results. }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
3.}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git status}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
. The }{\b\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
git}{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
 status}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 command will tell you which versioned files in your local working copy have been modified, added or removed etc. To avoid possible conflicts it is a good idea to always do a quick }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git status}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 before you do a }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git pull}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 command from the }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
~/projects/adaptit/}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 folder. The reason is you will be reminded of any temporary changes you may have made to your sources in your working copy, and will have a chance to revert them (using git checkout) if desired before you do a}{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
 git}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
pull}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
4.}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git checkout <file>}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
. The git checkout command has many uses. Its use for branching is very useful but will not be described here. One of the main uses of the git checkout command is to revert changes that you have made to a file. A }{\b\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
git checkout <file>}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 will revert any pending changes in the file named <file> (before you have committed those changes). The file will revert to its former content that it had before you made any local changes to it in your working copy. If you are thinking of doing an }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git checkout}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 command it is handy to first do the }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git status}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 command, which will remind you of what files have changed and show you the relative path you should prefix the <file>\uc2 \u8217\'81\'66s name with for the \uc1 }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git checkout <file>}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 command.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
5.}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git diff source/<filename>}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
. The diff command compares a modified file on your local machine to the version before local modifications were made. The results are output to the command line terminal in plain text format. You basically look for the lines preceded by }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
-}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 and }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
+}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 to see the changes (}{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
+}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 lines are additions, }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
-}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 lines are removed lines). See online tutorials on how to get a diff for a file against the version in the external repository.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
6. }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git commit -m"comment ..."}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
. The }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git commit}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 command commits your changes to your local working copy of the repository. You should always do an }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git pull}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 }{\ul\ulc0\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
before}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 you do a }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git commit}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
. The commit command also takes a little more explanation. Usually you would use the -m"comment \uc2 \u8230\'81\'63" to add a comment explaining the nature of the commit. If you only type \uc1 }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git commit }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
at the command line (without a comment), it opens the GNU }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
vi }{\b0\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
or}{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
 nano}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 editor for you to enter the text of a comment for the commit command. After typing a comment in the editor, just press }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Ctrl-X}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 to exit the editor; then }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
y}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 to permit it to use the temporary file it created for the git comment, or }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
n}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 to abort the commit process. The output details the results of the commit. }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
If you only want to commit changes to the repository for a single file or two (regardless of changes to other source files) you can optionally include one or more paths and filenames in the git commit command, for example (if invoked from within the }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
~/projects/adaptit/}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 folder):}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git commit source/Adapt_It.h source/helpers.cpp -m"comment"}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Where "comment" would tell what you've changed in Adapt_It.h.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
7.}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git add source/<filename>}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
. The add command only marks the file to be added to the repository. You have to follow up with an }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git commit -m"comment ..."}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 command for the file to be actually added to the remote repository.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
8.}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git rm source/<filename>}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
. The remove command likewise, only marks the file to be removed from the repository. Again, you have to follow up with an }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git commit -m"comment ..."}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 command for the file to be actually removed from the remote repository.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120\dbch\af20\rtlch \ltrch\loch

\par \pard\plain \s28\sl240\slmult1\qc\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb240\sa60\keepn\ltrpar\cf1\b\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f5\fs32\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b0\dbch\af20\rtlch \ltrch\loch
APPENDIX}
\par \pard\plain \s2\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f8\fs24\lang1033\sl240\slmult1\tx4536\tx5112\tx6264\li720\ri0\lin720\rin0\fi0\sb0\sa60{{\*\bkmkstart _Toc4c6be90a24}{\*\bkmkstart _Toc4c6be90a}{\*\bkmkend _Toc4c6be90a24}{\*\bkmkend _Toc4c6be90a}\i\b\dbch\af20\rtlch \ltrch\loch\fs28\loch\f15\hich\af15
Downloading a specific version of the wxWidgets library for experimentation on Linux (optional)}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
The following steps make reference to versions}{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
 3.0.2}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
,}{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
 2.8.12}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 of the wxWidgets library. If you download the latest development version, use }{\b\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
git clone}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
; if you download the latest \uc2 \u8220\'81\'67stable\u8221\'81\'68 release use 3.0.2 (from the main wxWidgets website at:) , or if you use the slightly older version currently packaged with Ubuntu, use 2.8.12\u8212\'81\'5csubstitute the appropriate version numbers for your case or download and build all of them if you want. The instructions below assume you will build the wxWidgets 3.0.2 library\-\-.\uc1 }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
If you also want to build the latest test version, you\uc2 \u8217\'81\'66ll have to use git clone to obtain the latest revision.  To do this, assuming you have git installed, follow these steps:\uc1 }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
1. }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Open a terminal.  The current directory will be your home user directory.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
2.}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
  Now type the following command:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
git clone https://github.com/wxWidgets/wxWidgets.git wx-git}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120\dbch\af20\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch
This will give you a wxWidgets directory containing the very latest development version.  We\uc2 \u8217\'81\'66ve used the name \u8220\'81\'67wx-git\u8221\'81\'68 and the instructions below will use this name, but you can actually call it anything you like, so long as you substitute your name where we\u8217\'81\'66ve used \u8220\'81\'67wx-git\u8221\'81\'68 below.\uc1 }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch
If you wish to also use wxWidgets 2.8.12, or 3.0.2, follow these instructions:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
1.}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 In your browser go to }{{\field{\*\fldinst HYPERLINK "http://sourceforge.net/projects/wxwindows/files/" }{\fldrslt {\cf2\ul\ulc0\cf9\ul\ulc0\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
h}{}}}\cf9\ul\ulc0\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
ttp://www.wxwidgets.org/downloads/}{\dbch\af20\rtlch \ltrch\loch
 and click on the "Source for Linux, OS X, etc" link reflecting the version you want to build for special build purposes. For our purposes here we choose the current }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
wxWidgets-3.0.2.tar.bz2}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 download.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
2.}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 Click on OK to "Open with Archive Manager." }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
3.}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 While the Archive Manager is still open, click on the "Extract" button near the top. In the "Places" list in the left side of the dialog that pops up, click on your home user directory if it is not already selected (in my case it is "bill", but your own user directory), and click on the "Extract" button at bottom right. The Archive Manager (similar to Winzip in Windows) extracts the tarball placing everything in a folder called }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
wxWidgets-3.0.2}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 located in your home }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
user}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 folder. Close the Archive Manager.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\rtlch \ltrch\loch\loch\f10\hich\af10
If you want the earlier 2.8.12 version, click on the directory with the appropriate version number to enter that directory, choose the wxWidgets-x.x.x}{\b\rtlch \ltrch\loch\loch\f10\hich\af10
.tar.bz2}{\rtlch \ltrch\loch\loch\f10\hich\af10
 file to download, and follow the same steps.  This will give you a folder}{\dbch\af20\rtlch \ltrch\loch
 }{\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
wxWidgets-2.8.12 }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
or }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
wxWidgets-x.x.x}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
.  You can download both if you wish.}
\par \pard\plain \s2\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f8\fs24\lang1033\sl240\slmult1\tx4536\tx5112\tx6264\li720\ri0\lin720\rin0\fi0\sb0\sa60{{\*\bkmkstart _Toc4c6be90a2529}{\*\bkmkstart _Toc4c6be90a25}{\*\bkmkend _Toc4c6be90a2529}{\*\bkmkend _Toc4c6be90a25}\i\b\dbch\af20\rtlch \ltrch\loch\fs28\loch\f15\hich\af15
Compile and build the wxWidgets library (optional)}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Note: It is entirely optional to build special or experimental versions of the wxWidgets library and use them to link together with Adapt It. One possible reason for doing this might be if an obscure bug turns up and you want to step the Debugger right into the wxWidgets library code.  This requires you to link Adapt It together with a version of wxWidgets that has been built from source on your system, so the Debugger can find the source files and display them correctly.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
This Appendix tells how to set this up. These instructions assume you have used }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
sudo apt-get}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 to install all of the developer packages as described in the }{\b\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Manual}{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
 Setup using apt-get command line}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 section of the main document above.}
\par \pard\plain \s3\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f8\fs24\lang1033\sl240\slmult1\tx6480\tx7200\tx8640\li1080\ri0\lin1080\rin0\fi0\sb0\sa60{{\*\bkmkstart _Toc1eb3e3b727}{\*\bkmkstart _Toc1eb3e3b7}{\*\bkmkend _Toc1eb3e3b727}{\*\bkmkend _Toc1eb3e3b7}\b\dbch\af20\rtlch \ltrch\loch\fs26\loch\f5\hich\af5
Building the Unicode Debug version of the wxWidgets library (optional)}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
OK, let's get the latest wxWidgets 3.0.2 library compiled and ready to go. We will be creating the binary library files for two configurations of the library: }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Unicode Debug}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 and }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Unicode Release}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 (we only support Unicode on the non-Windows platforms). We'll keep the different configurations of the library in separate child directories within the wxWidgets library tree that we downloaded and extracted now residing in the directory at: }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
~/wxWidgets-3.0.2/}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
. }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
1.}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 Change to the wxWidgets-3.0.2 folder by giving the following command:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
cd ~/wxWidgets-3.0.2}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
2.}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 A copy of the setup.h header file designed for the GTK toolkit needs to be copied to the right place for our Linux platform.  Open a terminal in this current folder, and type this command:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
\tab }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
cp include/wx/gtk/setup.h include/wx/setup.h}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
If instead of version 3.0.2 you are using the latest repository version of wxWidgets, the file setup.h won\uc2 \u8217\'81\'66t already exist.  So instead of the above command, from within your wx-git directory type the following two commands:\uc1 }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
\tab cp include/wx/gtk/setup0.h include/wx/gtk/setup.h}{\rtlch \ltrch\loch
\line }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
cp include/wx/gtk/setup0.h include/wx/setup.h}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Note: Experimentation shows that the setup.h file needs to be in both of the above directories for successful builds of the wxWidgets library and for successful builds of Adapt It against that library.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\rtlch \ltrch\loch
\line }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
3.}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 Also from within the wxWidgets-3.0.2 directory, create a folder called }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
buildgtkud}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 for the Unicode Debug build of the library, by typing the following command:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
mkdir buildgtkud}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
4.}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 Change into the }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
buildgtkud}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 directory by typing:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
cd buildgtkud}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
5.}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 The wxWidgets download uses a huge configure script to create an appropriate make files for building the library on a given machine. We'll use some options to tell configure that we want to create a }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
Unicode}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 library and that it should also be a }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
debug}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 version. Since we are invoking the configure script located in the parent directory of the directory we are currently located in, we prefix the command with }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
../}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 so now type the following long command (Note that the option parameters all begin with two dashes and have a single dash in the middle):}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\tx4320\li720\ri0\lin720\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\fs18\loch\f16\hich\af16
../configure --with-gtk --enable-debug --enable-aui --with-gnomeprint --enable-monolithic --enable-unicode --disable-compat28}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
If all is well, configure will display a bunch of messages as it checks the programming environment of the computer and configures various settings. It is normal to see a few WARNINGs, but there should not be any ERRORs in the output. Near the end of its output it will actually say it is creating the wxWidgets sample programs; and finally it should display a summary at the end (scroll back through the output to insure there were no errors). Note: I\uc2 \u8217\'81\'66ve used the \uc1 }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
--enable-monolithic}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 option which puts all of the wxWidgets library components in a single dynamic library (}{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
.so}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
) file. This was a temporary measure for the 2.9.5 library in order to be able to get its }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
wx-config --libs}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
  script to include the wxAui library module when configuring the Adapt It builds (see below).}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
If you are doing a build of version 2.8.12, omit the parameter --disable-compat28.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
If configure reported errors, check that you\uc2 \u8217\'81\'66ve installed everything with the \uc1 }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
sudo apt-get install}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 command as described in the }{\b\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Manual}{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
 Setup using apt-get command line}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 section, and that there are no typos in the }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
../configure}{\dbch\af20\rtlch \ltrch\loch\fs20\loch\f17\hich\af17
...}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 command line, and repeat the }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
../config}{\dbch\af20\rtlch \ltrch\loch\fs20\loch\f17\hich\af17
...}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 command line call (above) until it completes successfully without errors.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
6.}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 Now, actually create the library binaries by typing the following at the command line:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
make}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
\tab The library build process will take a while. You\uc2 \u8217\'81\'66ll see the verbose output from the make process dancing around on the screen. The make command runs the Makefile which invokes the g++ compiler (with many command line parameters!) on the scores of source files building them into the wxWidgets libraries.\uc1 }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Since we are creating a special or experimental wxWidgets library for development we will be keeping the libraries created in local folders rather than installing the wxWidgets library into the system-wide software locations. Therefore, we will }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
NOT}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 install the wxWidgets libraries system-wide by typing something like  }{\dbch\af20\rtlch \ltrch\loch\fs20\loch\f17\hich\af17
sudo make install }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
followed by }{\dbch\af20\rtlch \ltrch\loch\fs20\loch\f17\hich\af17
sudo ldconfig}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
). Instead, if working in a IDE (CodeBlocks), the IDE itself can be configured to supply the location of the wxWidgets libraries for debug and for release builds using:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
\tab --with-wx-config=<path>}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
option on our calls to the configure script as part of its build process. More about that in the section on CodeBlocks below.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
The Unicode Debug build of the wxWidgets library is now finished. }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Note: Although the basic steps for creating each build of the wxWidgets library (and in general any software on Unix/Linux systems) are: }{\rtlch \ltrch\loch
\line }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
\tab (1) }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
configure}{\rtlch \ltrch\loch
\line }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
\tab }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
(2) }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
make}{\rtlch \ltrch\loch
\line }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
\tab (3) }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
sudo make install}{\rtlch \ltrch\loch
\line }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
\tab }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
(4) }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
sudo ldconfig}{\rtlch \ltrch\loch
\line }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
but we won't do steps (3) and (4) for our wxWidgets library builds, because we don\uc2 \u8217\'81\'66t want the library binaries to take the place of the older libraries that come with our distribution by default \uc1 \u8211\'3f we are keeping the newer libraries separate and available only for experimental builds of Adapt It against that newer library \u8211\'3f for normal use we want to keep the default builds of Adapt It building dynamically against the current distro\uc2 \u8217\'81\'66s default wxWidgets library (2.8.12 or 3.0.2).\uc1 }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Next let's build the Unicode Release library.}
\par \pard\plain \s3\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f8\fs24\lang1033\sl240\slmult1\tx6480\tx7200\tx8640\li1080\ri0\lin1080\rin0\fi0\sb0\sa60{{\*\bkmkstart _Toc1eb3e3b72833}{\*\bkmkstart _Toc1eb3e3b728}{\*\bkmkend _Toc1eb3e3b72833}{\*\bkmkend _Toc1eb3e3b728}\b\dbch\af20\rtlch \ltrch\loch\fs26\loch\f5\hich\af5
Building the Unicode Release version of the wxWidgets library (optional)}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Note that if you are building wxWidgets to enable you to step into the wxWidgets code for locating an obscure bug, there\uc2 \u8217\'81\'66s no point in building a Release version.  But if you wish to, read on.  Building the Unicode Release version is very similar to the 6 steps for the Unicode Debug version above, but we create a different folder name for the build and leave out the \uc1 }{\dbch\af20\rtlch \ltrch\loch\fs20\loch\f17\hich\af17
--enable-debug}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 parameter in the configure command. Here are the steps (see above for detailed explanations):}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
cd ..}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
cd wxWidgets-3.0.2}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
mkdir buildgtku}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
cd buildgtku}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\fs18\loch\f14\hich\af14
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs18\loch\f16\hich\af16
../configure --with-gtk --enable-aui --with-gnomeprint --enable-monolithic --enable-unicode --disable-compat28}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
make}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
The Unicode Release build of the wxWidgets library is now finished. }
\par \pard\plain \s3\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f8\fs24\lang1033\sl240\slmult1\tx6480\tx7200\tx8640\li1080\ri0\lin1080\rin0\fi0\sb0\sa60{{\*\bkmkstart _Toc670db20630}{\*\bkmkstart _Toc670db206}{\*\bkmkend _Toc670db20630}{\*\bkmkend _Toc670db206}\b\dbch\af20\rtlch \ltrch\loch\fs26\loch\f5\hich\af5
Building Adapt It Against your Custom/Locally Built wxWidgets Library (optional }{\b\dbch\af20\rtlch \ltrch\loch\fs26\loch\f5\hich\af5
and a bit out-of-date}{\b\dbch\af20\rtlch \ltrch\loch\fs26\loch\f5\hich\af5
)}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Again, this is an entirely }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
optional}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 thing to do. Development work normally builds Adapt It against whatever version of the wxWidgets dynamic library that comes with a particular distribution of Linux (currently 2.8.12 or 3.0.2). The following description is for those developers who want to build Adapt It on Linux against a }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
special build of wxWidgets}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
, or a }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
newer version of wxWidgets}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 (3.1.0) than is available out of the box in a particular distribution of Linux.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Building Adapt It against a locally built wxWidgets library mainly involves pointing the build tools (or CodeBlocks\uc2 \u8217\'81\'66 build settings if using CodeBlocks) to use the locally built wxWidgets 3.1.0 binaries.\uc1 }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
This section assumes you have already followed the previous sections in this Appendix under the \uc2 \u8220\'81\'67Compile and Build the wxWidgets library (optional)\u8221\'81\'68 heading, which placed the build products for the Unicode Debug build in the \uc1 }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
~/wxWidgets-3.0.2/buildgtkud}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 directory, and placed the build products for the Unicode Release build in the }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
~/wxWidgets-3.0.2/buildgtku}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 directory.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
This section also assumes you have already followed the section above under the heading \uc2 \u8220\'81\'67Building and Running Adapt It from the Command Line.\u8221\'81\'68 In that section you created a build directory at: \uc1 }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
~/projects/adaptit/bin/linux/build_debug}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 and }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
~/projects/adaptit/bin/linux/build_release}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 to contain the build products for dynamic linking with whatever wxWidgets library (2.8.12) was available by default in the current linux distribution. In the steps below we will create two additional directories within the }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
~/projects/adaptit/bin/linux/}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 folder. They will be named }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
build_310_debug}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 and }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
build_310_release}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
. These directories will contain the build products for builds of Adapt It against the newer wxWidgets 3.1.0 library. We won\uc2 \u8217\'81\'66t touch the \uc1 }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
~/projects/adaptit/bin/linux/build_debug}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 or }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
~/adaptit/bin/linux/build_release}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 directories which will continue to contain the build products for linking against the default wxWidgets 2.8.12 or 3.0.2 dynamic library.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Change to the projects/adaptit/bin/linux/ directory:}{\rtlch \ltrch\loch
\line }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
cd ~/projects/adaptit/bin/linux}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Create the two directories to hold the build products for debug and release:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
mkdir build_310_debug}{\rtlch \ltrch\loch
\line }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
\tab mkdir build_310_release}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Change to the debug directory:}{\rtlch \ltrch\loch
\line }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
cd build_310_debug}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Configure the adaptit project by specifying where the wx-config script for the custom wxWidgets library is to be found: }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\fs18\loch\f17\hich\af17
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs18\loch\f16\hich\af16
../configure --enable-debug --with-wx-config=/home/<user>/wxWidgets-3.1.0/buildgtkud/wx-config}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Note: In this case too we are calling the configure script (located the parent linux directory), from our current }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
build_310_debug}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 directory (substitute your user name for }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
<user>}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
)}{\dbch\af20\rtlch \ltrch\loch\fs20\loch\f17\hich\af17
.}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 The }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
--enable-debug}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 option makes it a debug build. The }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
--with-wx-config=/home/...}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 option specifies the path to the actual wx-config script for the custom wxWdigets-3.1.0 library build that we want to use in building Adapt It.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
We can verify that the new library will be used by typing:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
\tab /home/<user>/wxWidgets-3.1.0/buildgtkud/wx-config --version}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
again substituting your user name for <user>. The output should show the new wxWidgets library version number as: }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
3.1.0.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Finally, build adaptit for the above configuration by invoking make:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\fs18\loch\f16\hich\af16
\tab make}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
The application sources should be compiled and linked against the wxWidgets-3.1.0 dynamic libraries located in the }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
~/wxWidgets-3.1.0/buildgtkud/lib/}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 folder.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
You can then run Adapt It from the current directory by calling:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\fs18\loch\f16\hich\af16
\tab ./adaptit}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Configuring and building the }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
release}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 version of Adapt It is similar, but is done from the }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
build_310_release}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 directory. In this case the configure script does }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
not}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 call }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
--enable-debug}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
, and it points to the }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
wxWidgets-3.1.0/buildgtku/wx-config}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 script:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
cd ~/projects/adaptit/build_310_release}{\rtlch \ltrch\loch
\line }{\dbch\af20\rtlch \ltrch\loch\fs18\loch\f17\hich\af17
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs18\loch\f16\hich\af16
../configure \u8211\'3f-with-wx-config=/home/<user>/wxWidgets-3.1.0/buildgtku/wx-config}{\rtlch \ltrch\loch
\line }{\b\dbch\af20\rtlch \ltrch\loch\fs18\loch\f16\hich\af16
\tab make}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
You can then run Adapt It from the current directory by calling:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\fs18\loch\f16\hich\af16
\tab ./adaptit}
\par \pard\plain \s2\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f8\fs24\lang1033\sl240\slmult1\tx5976\tx6552\tx7704\li1080\ri0\lin1080\rin0\fi-360\sb0\sa60{{\*\bkmkstart _Toc670db2063036}{\*\bkmkend _Toc670db2063036}\i\b\dbch\af20\rtlch \ltrch\loch\fs28\loch\f15\hich\af15
If configure or make fails - run the autotools}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
The adaptit project at GoogleCode should have included at checkout, the current Linux build files necessary to build the adaptit application. If you need to reconfigure the Linux command line build tools, that can be done by running a group of tools called autotools at the command line from the }{\b\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
projects/}{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
adaptit/bin/linux}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 directory, in order to get the command line build environment set up. Historically these tools were developed in order to somewhat automate the process of creating "make" files which are capable of building programs that will run correctly on any of the variety of unix-type systems. It is hard to explain everything the autotools do (but I\uc2 \u8217\'81\'66ve briefly summarized them below).\uc1 }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
1.}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 Go to the linux project directory by typing the following at the command line:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
cd}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
cd projects/adaptit/bin/linux}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
2.}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 Now, invoking the following commands in succession:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
libtoolize --force --copy}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
aclocal}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
touch NEWS README AUTHORS ChangeLog}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
autoconf }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
  }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
automake --add-missing}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
In case you are interested, here is a very rough summary of what the above calls do:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
libtoolize --force --copy}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 - The libtool package contains the GNU libtool, a set of shell scripts which automatically configure UNIX and UNIX-like architectures to generically build shared libraries.  Libtool provides a consistent, portable interface which simplifies the process of using shared libraries. libtoolize also creates the ltmain.sh symbolic link. The --force and --copy command options make libtoolize replace existing libtool files, and copy files from the libtool data directory rather than creating symlinks. These options can help to prevent build problems due to the system having different versions of the libtool utility.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
aclocal}{\dbch\af20\rtlch \ltrch\loch\fs20\loch\f17\hich\af17
 }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
- aclocal generates an aclocal.m4 file that contains definitions of all m4 macros required by autoconf (see below).}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
touch NEWS README AUTHORS ChangeLog}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 - the touch command creates the files listed in the command, if they don't already exist. If they already exists the accessed or modification times are updated to all be the current date/time. This is done to make the automake command happy (see about automake below).}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
autoconf}{\dbch\af20\rtlch \ltrch\loch\fs20\loch\f17\hich\af17
 }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
- creates a "configure" script that can be called by the user to build a program/package on any kind of unix/linux system. autoconf uses a list of features that the program needs and which are contained in a }{\dbch\af20\rtlch \ltrch\loch\fs20\loch\f17\hich\af17
configure.in}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 file.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
\tab }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
automake --add-missing}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
  - automake automatically creates the Makefile.in file(s) from Makefile.am file(s). Makefile.am files are essentially a list of the source files (.h and .cpp) using a simple syntax (we need to change Makefile.am any time we add or remove source files from the adaptit project \u8211\'3f then run automake again from the command line. Makefile.in files are in a form that feeds }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
in }{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
to the make command. The --add-missing option helps to insure that certain common files exist in certain situations, if they were not distributed with the version of automake on the current system.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
I have tried to be careful to use only relative paths within CodeBlocks project file (}{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
adaptit.cbp}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
) so that it should be able to work essentially without modification on any system that is set up following the procedures in this document. Hence, the }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
adaptit.cbp}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 project file is included in the git repository and will be located within the }{\b\dbch\af20\rtlch \ltrch\loch\fs20\loch\f16\hich\af16
projects/adaptit/bin/linux}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 folder created during a git clone operation.}
\par \pard\plain \s3\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\loch\f8\fs24\lang1033\sl240\slmult1\tx7920\tx8640\tx10080\li1440\ri0\lin1440\rin0\fi-360\sb0\sa60{\b\dbch\af20\rtlch \ltrch\loch\fs26\loch\f5\hich\af5
Using CodeBlocks to build Adapt It against a custom/locally built wxWidgets library}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
The first step is to tell CodeBlocks the location of your custom wxWidgets directory.  Under Windows we use the WXWIN environment variable, but CodeBlocks is unreliable in dealing with environment variables, so instead we use symbolic links.  These are the Linux equivalents of shortcuts on Windows or aliases on the Mac.  The easiest way to create a symbolic link (also called a symlink) is in the File Manager, to drag the icon for a file to another location.  A drop-down menu then appears, and one of the options is \uc2 \u8220\'81\'67Link here\u8221\'81\'68. \uc1 }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
We\uc2 \u8217\'81\'66re going to create symbolic links for wxWidgets-git repository version, 3.0.2, and 2.8.12.  By giving them specific names and putting them in a specific place, the CodeBlocks project will be able to locate them and link that version of wxWidgets to Adapt It.  If you didn\u8217\'81\'66t download all these versions of wxWidgets, just ignore the steps involving the ones you didn\u8217\'81\'66t download.\uc1 }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
1. In the File Manager, open a window into your home folder.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
2. Drag the icon for wxWidgets-git to somewhere else in the folder, and choose \uc2 \u8220\'81\'67Link here\u8221\'81\'68 from the drop-down menu.  \uc1 }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
3. A \uc2 \u8220\'81\'67rename\u8221\'81\'68 dialog will come up.  Rename the link to \u8220\'81\'67wx-git\u8221\'81\'68.\uc1 }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
4. Drag the icon for wxWidgets-3.0.2 to somewhere else in the folder, and choose \uc2 \u8220\'81\'67Link here\u8221\'81\'68.\uc1 }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
5. Rename the link to \uc2 \u8220\'81\'67wx30\u8221\'81\'68.\uc1 }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
6. Drag the icon for wxWidgets-2.8.12 to somewhere else in the folder, and choose \uc2 \u8220\'81\'67Link here\u8221\'81\'68.\uc1 }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
7. Rename the link to \uc2 \u8220\'81\'67wx28\u8221\'81\'68.\uc1 }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
We now need to move these symbolic links to your Root directory.  (The home directories for different users will have different names, but the Root directory always has a blank name, so the CodeBlocks project can always locate it.)}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
6. Open a Terminal window (which should have your home directory as its initial current directory).  }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
7. Type this command:}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0{\b\dbch\af20\rtlch \ltrch\loch\loch\f19\hich\af19
sudo cp -d wx-git /wx-git}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Type your password when prompted.  The Root directory needs superuser permissions to write to it, which is why we need to use sudo.}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
8. Now similarly type}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f19\hich\af19
sudo cp -d wx30 /wx30}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\b\dbch\af20\rtlch \ltrch\loch\loch\f19\hich\af19
sudo cp -d wx28 /wx28}
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
Once you\uc2 \u8217\'81\'66ve completed these steps, you won\u8217\'81\'66t normally need to repeat them.  Even if you use Subversion to update your copy of wxWidgets-git and rebuild it, the directory locations remain the same, so the symbolic links don\u8217\'81\'66t need to change.  You can also delete the original symbolic links in your home directory if you want to.\uc1 }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
9. Open the }{\b\dbch\af20\rtlch \ltrch\loch\loch\f14\hich\af14
adaptit.cbp}{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
 project in CodeBlocks.  Previously you set the \uc2 \u8220\'81\'67Build target\u8221\'81\'68 to either Debug or Release, but now you can choose DebugWX2.8, DebugWX3.0 or DebugWX-git.  We don\u8217\'81\'66t need Release build targets for these other wxWidgets versions, since we only use them for debugging or testing.  If you\u8217\'81\'66ve followed the above steps successfully, you should get a successful build of Adapt It against the version of wxWidgets that you chose, and if debugging you should be able to step right into the source code for wxWidgets.\uc1 }
\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120\dbch\af20\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120\dbch\af20\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120\dbch\af20\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\li0\ri0\lin0\rin0\fi0\sb0\sa120\dbch\af20\rtlch \ltrch\loch

\par \pard\plain \s0\sl240\slmult1\ql\keep\nowidctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\keepn\ltrpar\hyphpar0\cf1\kerning1\dbch\af21\langfe1081\dbch\af21\afs24\alang1081\loch\f7\fs24\lang1033\sl240\slmult1\qc\li0\ri0\lin0\rin0\fi0\sb0\sa120{\dbch\af20\rtlch \ltrch\loch\loch\f10\hich\af10
End of Documentation}
\par }